<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wen blog</title>
  <subtitle>tanyanwen的技术分享</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://smallwenzi.github.io/"/>
  <updated>2019-05-30T08:18:11.312Z</updated>
  <id>https://smallwenzi.github.io/</id>
  
  <author>
    <name>wen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring config bus</title>
    <link href="https://smallwenzi.github.io/2019/05/29/ring-config-bus/"/>
    <id>https://smallwenzi.github.io/2019/05/29/ring-config-bus/</id>
    <published>2019-05-29T09:06:00.000Z</published>
    <updated>2019-05-30T08:18:11.312Z</updated>
    
    <content type="html"><![CDATA[<p>config pom.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-cloud-starter-bus-amqp&lt;/artifactId&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>/configuration/src/main/resources/application-native.properties<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">spring.cloud.bus.enabled=true</span><br><span class="line">spring.cloud.bus.trace.enabled=true</span><br><span class="line">spring.rabbitmq.addresses=$&#123;RABBITMQ_ADDRESS&#125;</span><br><span class="line">spring.rabbitmq.username=$&#123;RABBITMQ_USERNAME&#125;</span><br><span class="line">spring.rabbitmq.password=$&#123;RABBITMQ_PASSWORD&#125;</span><br><span class="line">spring.rabbitmq.virtual-host=$&#123;RABBITMQ_VIRTUAL_HOST&#125;</span><br><span class="line">## \u5237\u65B0\u65F6\uFF0C\u5173\u95ED\u5B89\u5168\u9A8C\u8BC1</span><br><span class="line">management.security.enabled=false</span><br><span class="line">management.endpoints.web.exposure.include=bus-refresh</span><br></pre></td></tr></table></figure></p>
<p>刷新链接：<br><a href="http://ip:6081/actuator/bus-refresh" target="_blank" rel="noopener">http://ip:6081/actuator/bus-refresh</a></p>
<p>客户端<br>pom.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">				&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">				&lt;artifactId&gt;spring-cloud-starter-bus-amqp&lt;/artifactId&gt;&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>HelloController<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@RefreshScope</span><br><span class="line">// 使用该注解的类，会在接到SpringCloud配置中心配置刷新的时候，自动将新的配置更新到该类对应的字段中。</span><br><span class="line">class HelloController &#123;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;business.wx.appid&#125;&quot;)</span><br><span class="line">    private String hello;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/hello&quot;)</span><br><span class="line">    public String from() &#123;</span><br><span class="line">        return this.hello;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">######## bus-amqp</span><br><span class="line">## 刷新时，关闭安全验证</span><br><span class="line">management.security.enabled=false</span><br><span class="line">management.endpoints.web.exposure.include=bus-refresh</span><br><span class="line">## 开启消息跟踪</span><br><span class="line">spring.cloud.bus.enabled=true</span><br><span class="line">spring.cloud.bus.trace.enabled=true</span><br><span class="line">#mq的地址</span><br><span class="line">spring.rabbitmq.addresses=</span><br><span class="line">#mq的用户名</span><br><span class="line">spring.rabbitmq.username=</span><br><span class="line">#mq的密码</span><br><span class="line">spring.rabbitmq.password=</span><br><span class="line">spring.rabbitmq.publisherConfirms=false</span><br><span class="line">spring.rabbitmq.publisherReturns=false</span><br><span class="line">spring.rabbitmq.virtual-host=/</span><br></pre></td></tr></table></figure></p>
<p>测试连接<br>测试入口：<a href="http://ip:port/hello" target="_blank" rel="noopener">http://ip:port/hello</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;config pom.xml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
    
    </summary>
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/categories/spring-cloud/"/>
    
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/tags/spring-cloud/"/>
    
      <category term="spring config" scheme="https://smallwenzi.github.io/tags/spring-config/"/>
    
  </entry>
  
  <entry>
    <title>spring admin配置</title>
    <link href="https://smallwenzi.github.io/2019/05/29/pring-admin%E9%85%8D%E7%BD%AE/"/>
    <id>https://smallwenzi.github.io/2019/05/29/pring-admin配置/</id>
    <published>2019-05-29T08:54:00.000Z</published>
    <updated>2019-05-30T08:18:19.678Z</updated>
    
    <content type="html"><![CDATA[<p>spring admin 接入 eureka</p>
<p>pom.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">  &lt;groupId&gt;com.test.springcloud&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;springamdinserver&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;2.1&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">   &lt;name&gt;基础设施:springamdinserver&lt;/name&gt;</span><br><span class="line"></span><br><span class="line">  &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.0.RELEASE&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">    &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">  &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;de.codecentric&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-admin-starter-server&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.1.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">   &lt;dependencyManagement&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;Finchley.RELEASE&lt;/version&gt;</span><br><span class="line">                &lt;type&gt;pom&lt;/type&gt;</span><br><span class="line">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">    &lt;/dependencyManagement&gt;</span><br><span class="line">  &lt;build&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">     &lt;!-- 源码格式 --&gt;</span><br><span class="line">            &lt;plugin&gt;  </span><br><span class="line">                &lt;groupId&gt;com.googlecode.maven-java-formatter-plugin&lt;/groupId&gt;  </span><br><span class="line">                &lt;artifactId&gt;maven-java-formatter-plugin&lt;/artifactId&gt;  </span><br><span class="line">                &lt;version&gt;0.4&lt;/version&gt;  </span><br><span class="line">                &lt;configuration&gt;  </span><br><span class="line">                    &lt;configFile&gt;$&#123;project.basedir&#125;/code-style.xml&lt;/configFile&gt;  </span><br><span class="line">                &lt;/configuration&gt;  </span><br><span class="line">                &lt;executions&gt;  </span><br><span class="line">                    &lt;!--                 	&lt;execution&gt;   --&gt;</span><br><span class="line">                    &lt;!--                     	&lt;goals&gt;   --&gt;</span><br><span class="line">                    &lt;!--                         	&lt;goal&gt;format&lt;/goal&gt;   --&gt;</span><br><span class="line">                    &lt;!--                         &lt;/goals&gt;   --&gt;</span><br><span class="line">                    &lt;!--                     &lt;/execution&gt;   --&gt;</span><br><span class="line">                &lt;/executions&gt;  </span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;!-- 单元测试与覆盖率 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.22.1&lt;/version&gt;&lt;!--$NO-MVN-MAN-VER$--&gt;</span><br><span class="line">                &lt;dependencies&gt;</span><br><span class="line">                    &lt;dependency&gt;</span><br><span class="line">                        &lt;groupId&gt;org.apache.maven.surefire&lt;/groupId&gt;</span><br><span class="line">                        &lt;artifactId&gt;surefire-junit47&lt;/artifactId&gt;</span><br><span class="line">                        &lt;version&gt;2.21.0&lt;/version&gt;</span><br><span class="line">                    &lt;/dependency&gt;</span><br><span class="line">                &lt;/dependencies&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;skip&gt;true&lt;/skip&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-surefire-report-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.21.0&lt;/version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;includes&gt;</span><br><span class="line">                        &lt;include&gt;**/*Test.java&lt;/include&gt;</span><br><span class="line">                    &lt;/includes&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;  </span><br><span class="line">                &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;  </span><br><span class="line">                &lt;artifactId&gt;cobertura-maven-plugin&lt;/artifactId&gt;  </span><br><span class="line">                &lt;version&gt;2.7&lt;/version&gt; </span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;formats&gt;</span><br><span class="line">                        &lt;format&gt;html&lt;/format&gt;</span><br><span class="line">                        &lt;format&gt;xml&lt;/format&gt;</span><br><span class="line">                    &lt;/formats&gt;</span><br><span class="line">                &lt;/configuration&gt; </span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;!--编译--&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.8.0&lt;/version&gt;&lt;!--$NO-MVN-MAN-VER$--&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;/source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;/target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;!-- javadoc文档 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.0.1&lt;/version&gt;&lt;!--$NO-MVN-MAN-VER$--&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;aggregate&gt;true&lt;/aggregate&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;!-- spring boot --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;repackage&lt;/goal&gt;</span><br><span class="line">                        &lt;/goals&gt;</span><br><span class="line">                    &lt;/execution&gt;</span><br><span class="line">                &lt;/executions&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.8&lt;/version&gt;&lt;!--$NO-MVN-MAN-VER$--&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;copy-lib-src-webapps&lt;/id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">                        &lt;configuration&gt;</span><br><span class="line">                            &lt;target&gt;</span><br><span class="line">                                &lt;copy todir=&quot;$&#123;project.basedir&#125;/docker&quot;&gt;</span><br><span class="line">                                    &lt;fileset dir=&quot;$&#123;project.basedir&#125;/target&quot;&gt;</span><br><span class="line">                                        &lt;include name=&quot;*.jar&quot; /&gt;</span><br><span class="line">                                    &lt;/fileset&gt;</span><br><span class="line">                                &lt;/copy&gt;</span><br><span class="line">                            &lt;/target&gt;</span><br><span class="line">                        &lt;/configuration&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;run&lt;/goal&gt;</span><br><span class="line">                        &lt;/goals&gt;</span><br><span class="line">                    &lt;/execution&gt;</span><br><span class="line">                &lt;/executions&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;com.spotify&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.2.0&lt;/version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;!-- imageName必须全为小写 --&gt;</span><br><span class="line">                    &lt;imageName&gt;springboot-unit-test:1.0&lt;/imageName&gt;</span><br><span class="line">                    &lt;dockerDirectory&gt;$&#123;project.basedir&#125;/docker&lt;/dockerDirectory&gt;</span><br><span class="line">                    &lt;resources&gt;</span><br><span class="line">                        &lt;resource&gt;</span><br><span class="line">                            &lt;targetPath&gt;/&lt;/targetPath&gt;</span><br><span class="line">                            &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;</span><br><span class="line">                            &lt;include&gt;$&#123;project.build.finalName&#125;.jar&lt;/include&gt;</span><br><span class="line">                        &lt;/resource&gt;</span><br><span class="line">                    &lt;/resources&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">      &lt;/plugins&gt;</span><br><span class="line">  &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></p>
<p>application.properties</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name=springadminserver</span><br><span class="line">server.port=8080</span><br><span class="line">#using the info endpoint</span><br><span class="line">info.tags.environment=test</span><br><span class="line">#配置eureka</span><br><span class="line">eureka.client.serviceUrl.defaultZone=$&#123;EUREKA_SERVICEURL&#125;</span><br><span class="line">eureka.instance.prefer-ip-address=true</span><br><span class="line">spring.cloud.inetutils.preferredNetworks=$&#123;PREFERRED_IP_PATTERN:.*&#125;</span><br><span class="line">eureka.instance.preferIpAddress=true</span><br><span class="line">eureka.instance.instance-id=$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span><br><span class="line">eureka.instance.leaseRenewalIntervalInSeconds=10</span><br><span class="line">eureka.instance.health-check-url-path=/actuator/health</span><br><span class="line">eureka.client.registryFetchIntervalSeconds=5</span><br><span class="line">#公开的站点</span><br><span class="line">management.endpoints.web.exposure.include=*</span><br><span class="line">management.endpoints.health.show-details=ALWAYS</span><br><span class="line"># 安全密码</span><br><span class="line">spring.security.user.name=user</span><br><span class="line">spring.security.user.password=123456</span><br></pre></td></tr></table></figure>
<p>SpringBootAdminApplication<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.springamdinserver;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line">import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line">import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line">import org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler;</span><br><span class="line"></span><br><span class="line">import de.codecentric.boot.admin.server.config.AdminServerProperties;</span><br><span class="line">import de.codecentric.boot.admin.server.config.EnableAdminServer;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">@EnableAdminServer</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">public class SpringBootAdminApplication &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(SpringBootAdminApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Configuration</span><br><span class="line">    public static class SecurityPermitAllConfig extends WebSecurityConfigurerAdapter &#123;</span><br><span class="line">        private final String adminContextPath;</span><br><span class="line"></span><br><span class="line">        public SecurityPermitAllConfig(AdminServerProperties adminServerProperties) &#123;</span><br><span class="line">            this.adminContextPath = adminServerProperties.getContextPath();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        protected void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">            // @formatter:off</span><br><span class="line">            SavedRequestAwareAuthenticationSuccessHandler successHandler =</span><br><span class="line">                    new SavedRequestAwareAuthenticationSuccessHandler();</span><br><span class="line">            successHandler.setTargetUrlParameter(&quot;redirectTo&quot;);</span><br><span class="line"></span><br><span class="line">            http.authorizeRequests().antMatchers(adminContextPath + &quot;/assets/**&quot;).permitAll()</span><br><span class="line">                    .antMatchers(adminContextPath + &quot;/login&quot;).permitAll().anyRequest().authenticated().and()</span><br><span class="line">                    .formLogin().loginPage(adminContextPath + &quot;/login&quot;).successHandler(successHandler).and().logout()</span><br><span class="line">                    .logoutUrl(adminContextPath + &quot;/logout&quot;).and().httpBasic().and().csrf().disable();</span><br><span class="line">            // @formatter:on</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>客户端配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">management.endpoints.web.exposure.include=*</span><br><span class="line">management.endpoints.health.show-details=ALWAYS</span><br><span class="line">##日志路径</span><br><span class="line">logging.path=/applog/logincenterWxBindingService</span><br></pre></td></tr></table></figure></p>
<p>重启服务</p>
<p>控制台：<br><a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a><br><img src="/2019/05/29/pring-admin配置/1.png" alt="logo"><br>eurka上服务<br><img src="/2019/05/29/pring-admin配置/2.png" alt="logo"><br>每个服务 内存情况<br><img src="/2019/05/29/pring-admin配置/3.png" alt="logo"><br>查看日志<br><img src="/2019/05/29/pring-admin配置/4.png" alt="logo"><br>流量情况：<br><img src="/2019/05/29/pring-admin配置/5.png" alt="logo"></p>
<p>参考：<a href="https://github.com/codecentric/spring-boot-admin" target="_blank" rel="noopener">https://github.com/codecentric/spring-boot-admin</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;spring admin 接入 eureka&lt;/p&gt;
&lt;p&gt;pom.xml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b
    
    </summary>
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/categories/spring-cloud/"/>
    
    
      <category term="springAdmin" scheme="https://smallwenzi.github.io/tags/springAdmin/"/>
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/tags/spring-cloud/"/>
    
  </entry>
  
  <entry>
    <title>查询rabbitmq 队列信息</title>
    <link href="https://smallwenzi.github.io/2019/05/29/rabbitmq-%E9%98%9F%E5%88%97%E4%BF%A1%E6%81%AF/"/>
    <id>https://smallwenzi.github.io/2019/05/29/rabbitmq-队列信息/</id>
    <published>2019-05-29T08:48:00.000Z</published>
    <updated>2019-05-29T08:56:31.692Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要做mq 消息预警，消息一旦堆积某个数量就报警。</p>
<p>RabbitMQ自己就提供了HTTP API手册，比如我本地的API手册地址为：<a href="http://localhost:15672/api" target="_blank" rel="noopener">http://localhost:15672/api</a></p>
<p><a href="http://localhost:15672/api/queues/%2F/soaSyncPwdQueue" target="_blank" rel="noopener">http://localhost:15672/api/queues/%2F/soaSyncPwdQueue</a><br>可以看到队列相关的所有信息都有记录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;consumer_details&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;arguments&quot;: &#123;</span><br><span class="line">        </span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;channel_details&quot;: &#123;</span><br><span class="line">        &quot;connection_name&quot;: &quot;10.143.172.86:35833 -&gt; 10.210.93.176:5672&quot;,</span><br><span class="line">        &quot;name&quot;: &quot;10.143.172.86:35833 -&gt; 10.210.93.176:5672 (1)&quot;,</span><br><span class="line">        &quot;node&quot;: &quot;rabbit@CNQLS03247&quot;,</span><br><span class="line">        &quot;number&quot;: 1,</span><br><span class="line">        &quot;peer_host&quot;: &quot;10.143.172.86&quot;,</span><br><span class="line">        &quot;peer_port&quot;: 35833,</span><br><span class="line">        &quot;user&quot;: &quot;logincenter&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;ack_required&quot;: true,</span><br><span class="line">      &quot;consumer_tag&quot;: &quot;amq.ctag-Gvgmd8yxscKvBkBiGp3J3g&quot;,</span><br><span class="line">      &quot;exclusive&quot;: false,</span><br><span class="line">      &quot;prefetch_count&quot;: 0,</span><br><span class="line">      &quot;queue&quot;: &#123;</span><br><span class="line">        &quot;name&quot;: &quot;soaSyncPwdQueue&quot;,</span><br><span class="line">        &quot;vhost&quot;: &quot;/&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;arguments&quot;: &#123;</span><br><span class="line">    &quot;x-dead-letter-exchange&quot;: &quot;&quot;,</span><br><span class="line">    &quot;x-dead-letter-routing-key&quot;: &quot;DL_soaSyncPwdQueue&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;auto_delete&quot;: false,</span><br><span class="line">  &quot;backing_queue_status&quot;: &#123;</span><br><span class="line">    &quot;avg_ack_egress_rate&quot;: 0.00021645676867156752,</span><br><span class="line">    &quot;avg_ack_ingress_rate&quot;: 0.00021645676867156752,</span><br><span class="line">    &quot;avg_egress_rate&quot;: 0.00021645676867156752,</span><br><span class="line">    &quot;avg_ingress_rate&quot;: 0.00021645676867156752,</span><br><span class="line">    &quot;delta&quot;: [</span><br><span class="line">      &quot;delta&quot;,</span><br><span class="line">      &quot;undefined&quot;,</span><br><span class="line">      0,</span><br><span class="line">      0,</span><br><span class="line">      &quot;undefined&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;len&quot;: 0,</span><br><span class="line">    &quot;mode&quot;: &quot;default&quot;,</span><br><span class="line">    &quot;next_seq_id&quot;: 2177,</span><br><span class="line">    &quot;q1&quot;: 0,</span><br><span class="line">    &quot;q2&quot;: 0,</span><br><span class="line">    &quot;q3&quot;: 0,</span><br><span class="line">    &quot;q4&quot;: 0,</span><br><span class="line">    &quot;target_ram_count&quot;: &quot;infinity&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;consumer_utilisation&quot;: null,</span><br><span class="line">  &quot;consumers&quot;: 1,</span><br><span class="line">  &quot;deliveries&quot;: [</span><br><span class="line">    </span><br><span class="line">  ],</span><br><span class="line">  &quot;durable&quot;: true,</span><br><span class="line">  &quot;effective_policy_definition&quot;: [</span><br><span class="line">    </span><br><span class="line">  ],</span><br><span class="line">  &quot;exclusive&quot;: false,</span><br><span class="line">  &quot;exclusive_consumer_tag&quot;: null,</span><br><span class="line">  &quot;garbage_collection&quot;: &#123;</span><br><span class="line">    &quot;fullsweep_after&quot;: 65535,</span><br><span class="line">    &quot;max_heap_size&quot;: 0,</span><br><span class="line">    &quot;min_bin_vheap_size&quot;: 46422,</span><br><span class="line">    &quot;min_heap_size&quot;: 233,</span><br><span class="line">    &quot;minor_gcs&quot;: 294</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;head_message_timestamp&quot;: null,</span><br><span class="line">  &quot;idle_since&quot;: &quot;2019-05-29 7:34:01&quot;,</span><br><span class="line">  &quot;incoming&quot;: [</span><br><span class="line">    </span><br><span class="line">  ],</span><br><span class="line">  &quot;memory&quot;: 18808,</span><br><span class="line">  &quot;message_bytes&quot;: 0,</span><br><span class="line">  &quot;message_bytes_paged_out&quot;: 0,</span><br><span class="line">  &quot;message_bytes_persistent&quot;: 0,</span><br><span class="line">  &quot;message_bytes_ram&quot;: 0,</span><br><span class="line">  &quot;message_bytes_ready&quot;: 0,</span><br><span class="line">  &quot;message_bytes_unacknowledged&quot;: 0,</span><br><span class="line">  &quot;message_stats&quot;: &#123;</span><br><span class="line">    &quot;ack&quot;: 2007,</span><br><span class="line">    &quot;ack_details&quot;: &#123;</span><br><span class="line">      &quot;rate&quot;: 0.0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;deliver&quot;: 2181,</span><br><span class="line">    &quot;deliver_details&quot;: &#123;</span><br><span class="line">      &quot;rate&quot;: 0.0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;deliver_get&quot;: 2181,</span><br><span class="line">    &quot;deliver_get_details&quot;: &#123;</span><br><span class="line">      &quot;rate&quot;: 0.0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;deliver_no_ack&quot;: 0,</span><br><span class="line">    &quot;deliver_no_ack_details&quot;: &#123;</span><br><span class="line">      &quot;rate&quot;: 0.0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;get&quot;: 0,</span><br><span class="line">    &quot;get_details&quot;: &#123;</span><br><span class="line">      &quot;rate&quot;: 0.0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;get_no_ack&quot;: 0,</span><br><span class="line">    &quot;get_no_ack_details&quot;: &#123;</span><br><span class="line">      &quot;rate&quot;: 0.0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;publish&quot;: 2177,</span><br><span class="line">    &quot;publish_details&quot;: &#123;</span><br><span class="line">      &quot;rate&quot;: 0.0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;redeliver&quot;: 4,</span><br><span class="line">    &quot;redeliver_details&quot;: &#123;</span><br><span class="line">      &quot;rate&quot;: 0.0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;messages&quot;: 0,</span><br><span class="line">  &quot;messages_details&quot;: &#123;</span><br><span class="line">    &quot;rate&quot;: 0.0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;messages_paged_out&quot;: 0,</span><br><span class="line">  &quot;messages_persistent&quot;: 0,</span><br><span class="line">  &quot;messages_ram&quot;: 0,</span><br><span class="line">  &quot;messages_ready&quot;: 0, //消息未消费</span><br><span class="line">  &quot;messages_ready_details&quot;: &#123;</span><br><span class="line">    &quot;rate&quot;: 0.0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;messages_ready_ram&quot;: 0,</span><br><span class="line">  &quot;messages_unacknowledged&quot;: 0, //正在消费</span><br><span class="line">  &quot;messages_unacknowledged_details&quot;: &#123;</span><br><span class="line">    &quot;rate&quot;: 0.0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;messages_unacknowledged_ram&quot;: 0,</span><br><span class="line">  &quot;name&quot;: &quot;soaSyncPwdQueue&quot;,</span><br><span class="line">  &quot;node&quot;: &quot;rabbit@CNQLS03247&quot;,</span><br><span class="line">  &quot;operator_policy&quot;: null,</span><br><span class="line">  &quot;policy&quot;: null,</span><br><span class="line">  &quot;recoverable_slaves&quot;: null,</span><br><span class="line">  &quot;reductions&quot;: 23652972,</span><br><span class="line">  &quot;reductions_details&quot;: &#123;</span><br><span class="line">    &quot;rate&quot;: 0.0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">  &quot;vhost&quot;: &quot;/&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>注意：<br>虚拟主机名Virtual host在设置的时候不要带/，不然会访问不到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;error&quot;:&quot;Object Not Found&quot;,&quot;reason&quot;:&quot;\&quot;Not Found\&quot;\n&quot;&#125;</span><br></pre></td></tr></table></figure></p>
<p>之前就是被这个坑了好久，明明按照API写的格式来的，就是访问不到。<br>java代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">jdk 1.8</span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line">import java.net.HttpURLConnection;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.util.Base64;</span><br><span class="line"></span><br><span class="line">public class Test &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        String host = &quot;&quot;;</span><br><span class="line">        String port = &quot;&quot;;</span><br><span class="line">        String virtualHost = &quot;&quot;;</span><br><span class="line">        String queueName = &quot;&quot;;</span><br><span class="line">        // 发送一个GET请求</span><br><span class="line">        HttpURLConnection httpConn = null;</span><br><span class="line">        BufferedReader in = null;</span><br><span class="line"></span><br><span class="line">        String urlString = &quot;http://&quot; + host + &quot;:&quot; + port + &quot;/api/queues/&quot; + virtualHost + &quot;/&quot; + queueName;</span><br><span class="line">        // urlString = &quot;http://&quot; + host + &quot;:&quot; + port + &quot;/api/queues/&quot;;</span><br><span class="line">        URL url = new URL(urlString);</span><br><span class="line">        httpConn = (HttpURLConnection) url.openConnection();</span><br><span class="line">        // 设置用户名密码</span><br><span class="line">        String user=&quot;&quot;;</span><br><span class="line">        String password=&quot;&quot;;</span><br><span class="line">        String auth = user + &quot;:&quot; + password;</span><br><span class="line"></span><br><span class="line">        String encoding = new String(Base64.getEncoder().encode(auth.getBytes()));</span><br><span class="line">        httpConn.setDoOutput(true);</span><br><span class="line">        httpConn.setRequestProperty(&quot;Authorization&quot;, &quot;Basic &quot; + encoding);</span><br><span class="line">        // 建立实际的连接</span><br><span class="line">        httpConn.connect();</span><br><span class="line">        // 读取响应</span><br><span class="line">        if (httpConn.getResponseCode() == HttpURLConnection.HTTP_OK) &#123;</span><br><span class="line">            StringBuilder content = new StringBuilder();</span><br><span class="line">            String tempStr = &quot;&quot;;</span><br><span class="line">            in = new BufferedReader(new InputStreamReader(httpConn.getInputStream()));</span><br><span class="line">            while ((tempStr = in.readLine()) != null) &#123;</span><br><span class="line">                content.append(tempStr);</span><br><span class="line">            &#125;</span><br><span class="line">            in.close();</span><br><span class="line">            httpConn.disconnect();</span><br><span class="line">            System.out.println(content.toString());</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            System.out.println(httpConn.getResponseCode());</span><br><span class="line">            httpConn.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近需要做mq 消息预警，消息一旦堆积某个数量就报警。&lt;/p&gt;
&lt;p&gt;RabbitMQ自己就提供了HTTP API手册，比如我本地的API手册地址为：&lt;a href=&quot;http://localhost:15672/api&quot; target=&quot;_blank&quot; rel=&quot;noop
    
    </summary>
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/categories/spring-cloud/"/>
    
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/tags/spring-cloud/"/>
    
      <category term="rabbitMq" scheme="https://smallwenzi.github.io/tags/rabbitMq/"/>
    
  </entry>
  
  <entry>
    <title>resttemplate 问题</title>
    <link href="https://smallwenzi.github.io/2019/05/29/sttemplate-%E9%97%AE%E9%A2%98/"/>
    <id>https://smallwenzi.github.io/2019/05/29/sttemplate-问题/</id>
    <published>2019-05-29T08:38:00.000Z</published>
    <updated>2019-05-29T08:54:44.633Z</updated>
    
    <content type="html"><![CDATA[<p>最近遇到一个问题：<br>mq消费 同步调用其他服务，突然不消费mq数据，且mq数据一直堆积</p>
<p>原因：<br>如果什么都不设置，RestTemplate默认使用的是SimpleClientHttpRequestFactory，其内部使用的是jdk的java.net.HttpURLConnection创建底层连接，默认是没有连接池的，connectTimeout和readTimeout都是 -1，即没有超时时间</p>
<p>解决方案：<br>http链接池配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">import lombok.Data;</span><br><span class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"> </span><br><span class="line">@Component</span><br><span class="line">@ConfigurationProperties(prefix = &quot;http-pool&quot;)</span><br><span class="line">@Data</span><br><span class="line">public class HttpPoolProperties &#123;</span><br><span class="line"> </span><br><span class="line">    private Integer maxTotal;</span><br><span class="line">    private Integer defaultMaxPerRoute;</span><br><span class="line">    private Integer connectTimeout;</span><br><span class="line">    private Integer connectionRequestTimeout;</span><br><span class="line">    private Integer socketTimeout;</span><br><span class="line">    private Integer validateAfterInactivity;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http-pool.maxTotal=200</span><br><span class="line">http-pool.defaultMaxPerRoute=100</span><br><span class="line">http-pool.connectTimeout=5000</span><br><span class="line">http-pool.connectionRequestTimeout=1000</span><br><span class="line">http-pool.socketTimeout=600000</span><br><span class="line">http-pool.validateAfterInactivity=2000</span><br></pre></td></tr></table></figure></p>
<p>RestTemplateConfig<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class RestTemplateConfig &#123;</span><br><span class="line"> </span><br><span class="line">    @Autowired</span><br><span class="line">    private HttpPoolProperties httpPoolProperties;</span><br><span class="line"> </span><br><span class="line">    @Bean</span><br><span class="line">    @LoadBalanced</span><br><span class="line">    public RestTemplate restTemplate() &#123;</span><br><span class="line">        return new RestTemplate(httpRequestFactory());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Bean</span><br><span class="line">    public ClientHttpRequestFactory httpRequestFactory() &#123;</span><br><span class="line">        return new HttpComponentsClientHttpRequestFactory(httpClient());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Bean</span><br><span class="line">    public HttpClient httpClient() &#123;</span><br><span class="line">        Registry&lt;ConnectionSocketFactory&gt; registry = RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()</span><br><span class="line">                .register(&quot;http&quot;, PlainConnectionSocketFactory.getSocketFactory())</span><br><span class="line">                .register(&quot;https&quot;, SSLConnectionSocketFactory.getSocketFactory())</span><br><span class="line">                .build();</span><br><span class="line">        PoolingHttpClientConnectionManager connectionManager = new PoolingHttpClientConnectionManager(registry);</span><br><span class="line">        connectionManager.setMaxTotal(httpPoolProperties.getMaxTotal());</span><br><span class="line">        connectionManager.setDefaultMaxPerRoute(httpPoolProperties.getDefaultMaxPerRoute());</span><br><span class="line">        connectionManager.setValidateAfterInactivity(httpPoolProperties.getValidateAfterInactivity());</span><br><span class="line">        RequestConfig requestConfig = RequestConfig.custom()</span><br><span class="line">                .setSocketTimeout(httpPoolProperties.getSocketTimeout()) //服务器返回数据(response)的时间，超过抛出read timeout</span><br><span class="line">                .setConnectTimeout(httpPoolProperties.getConnectTimeout()) //连接上服务器(握手成功)的时间，超出抛出connect timeout</span><br><span class="line">                .setConnectionRequestTimeout(httpPoolProperties.getConnectionRequestTimeout())//从连接池中获取连接的超时时间，超时间未拿到可用连接，会抛出org.apache.http.conn.ConnectionPoolTimeoutException: Timeout waiting for connection from pool</span><br><span class="line">                .build();</span><br><span class="line">        return HttpClientBuilder.create()</span><br><span class="line">                .setDefaultRequestConfig(requestConfig)</span><br><span class="line">                .setConnectionManager(connectionManager)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>引用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">  private RestTemplate restTemplate;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近遇到一个问题：&lt;br&gt;mq消费 同步调用其他服务，突然不消费mq数据，且mq数据一直堆积&lt;/p&gt;
&lt;p&gt;原因：&lt;br&gt;如果什么都不设置，RestTemplate默认使用的是SimpleClientHttpRequestFactory，其内部使用的是jdk的java.ne
    
    </summary>
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/categories/spring-cloud/"/>
    
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/tags/spring-cloud/"/>
    
      <category term="resttemplate" scheme="https://smallwenzi.github.io/tags/resttemplate/"/>
    
  </entry>
  
  <entry>
    <title>底层代码构造sql忽略NUll条件</title>
    <link href="https://smallwenzi.github.io/2019/05/06/A%E9%97%AE%E9%A2%98/"/>
    <id>https://smallwenzi.github.io/2019/05/06/A问题/</id>
    <published>2019-05-06T03:00:00.000Z</published>
    <updated>2019-05-30T08:19:33.683Z</updated>
    
    <content type="html"><![CDATA[<p>代码没有判断查询的值null，导致把全部数据load内存里，这样系统崩溃</p>
<p>代码：com.test.common.jpa.repository.JpaRepoUtil<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">private static StringBuilder generateQlForQueryByProperties(Map&lt;String, Object&gt; propertiesMap,</span><br><span class="line">		StringBuilder ql, Map&lt;Integer, Object&gt; params, FindByPropertiesType findType) &#123;</span><br><span class="line">	int index = 0;</span><br><span class="line">	</span><br><span class="line">	if (propertiesMap != null &amp;&amp; !propertiesMap.isEmpty()) &#123;</span><br><span class="line">		boolean doDeleteAnd = false, doDeletewWere = true;</span><br><span class="line">		ql.append(&quot; where &quot;);</span><br><span class="line">        for (Entry&lt;String,Object&gt; entry: propertiesMap.entrySet()) &#123;</span><br><span class="line">        	Object value = entry.getValue();</span><br><span class="line">               //忽略null 的值</span><br><span class="line">        	if (value != null) &#123;</span><br><span class="line">        		if (doDeletewWere) </span><br><span class="line">        			doDeletewWere = false;</span><br><span class="line">        		</span><br><span class="line">        		if (value instanceof String &amp;&amp; (findType == null || FindByPropertiesType.Fuzzy.equals(findType))) &#123;</span><br><span class="line">        			String valueStr = (String) entry.getValue();</span><br><span class="line">        			ql.append(&quot;upper(model.&quot; + entry.getKey() + &quot;) like :propertyValue&quot; + index + &quot; and &quot;);</span><br><span class="line">        			params.put(index++, &quot;%&quot; + valueStr.trim().toUpperCase() + &quot;%&quot;);</span><br><span class="line">        		&#125; else if(QueryValue.NULL.equals(value)) &#123;</span><br><span class="line">        			ql.append(&quot;model.&quot; + entry.getKey() + &quot; is null and &quot;);</span><br><span class="line">        		&#125; else if(QueryValue.NotNull.equals(value)) &#123;</span><br><span class="line">        			ql.append(&quot;model.&quot; + entry.getKey() + &quot; is not null and &quot;);</span><br><span class="line">        		&#125; else &#123;</span><br><span class="line">        			ql.append(&quot;model.&quot; + entry.getKey() + &quot;=:propertyValue&quot; + index + &quot; and &quot;);</span><br><span class="line">        			params.put(index++, entry.getValue());</span><br><span class="line">        		&#125;</span><br><span class="line">        		</span><br><span class="line">        		doDeleteAnd = true;</span><br><span class="line">        	&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (doDeleteAnd)</span><br><span class="line">        	ql = ql.delete(ql.toString().lastIndexOf(&quot; and &quot;), ql.toString().length());</span><br><span class="line">        if (doDeletewWere)</span><br><span class="line">       		ql = ql.delete(ql.toString().lastIndexOf(&quot; where &quot;), ql.toString().length());</span><br><span class="line">	&#125;</span><br><span class="line">	return ql;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/2019/05/06/A问题/1.png" alt="upload successful"></p>
<p>总结：需要深度了解底层代码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码没有判断查询的值null，导致把全部数据load内存里，这样系统崩溃&lt;/p&gt;
&lt;p&gt;代码：com.test.common.jpa.repository.JpaRepoUtil&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
    
    </summary>
    
      <category term="spring cloud" scheme="https://smallwenzi.github.io/categories/spring-cloud/"/>
    
    
      <category term="jpa" scheme="https://smallwenzi.github.io/tags/jpa/"/>
    
  </entry>
  
  <entry>
    <title>在windows下atom上搭建PlantUML书写环境</title>
    <link href="https://smallwenzi.github.io/2018/10/14/windows%E4%B8%8Batom%E4%B8%8A%E6%90%AD%E5%BB%BAPlantUML%E4%B9%A6%E5%86%99%E7%8E%AF%E5%A2%83/"/>
    <id>https://smallwenzi.github.io/2018/10/14/windows下atom上搭建PlantUML书写环境/</id>
    <published>2018-10-14T07:36:00.000Z</published>
    <updated>2018-10-14T07:52:24.276Z</updated>
    
    <content type="html"><![CDATA[<p>PlantUML是一款使用纯文本绘制UML图的开源软件。它的优点是能够帮助作者把精力集中到内容的书写上而不是格式的调整。本文介绍了一种在windows环境下atom编辑器上搭建PlantUML书写环境的方法。</p>
<h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><ul>
<li>atom</li>
<li>graphviz<br><a href="http://www.graphviz.org/" target="_blank" rel="noopener">Graphviz</a>是一款开源图形可视化软件。Atom的PlantUML插件使用graphviz将PlantUML语言绘制成相应的图形。<h1 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h1>github上已经有开发者为atom开发了PlantUML相关的插件。这里推荐以下两个插件</li>
<li>language-plantuml</li>
<li>plantuml-viewer<br>其中language-plantuml提供了PlantUML语法高亮支持，plantuml-viewer负责把PlantUML语句转化为对应的UML图。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">有很多博客使用plantuml-preview。本人试用了这两款插件，发现都能很好的支持PlantUML。</span><br><span class="line">但是plantuml-viewer更有优势：plantuml-viewer能够实时显示PlantUML语言描述的图形，</span><br><span class="line">并且可以通过鼠标滚轮流畅的调节图形大小。此外，plantuml-preview需要显式的配置java和plantuml.jar，</span><br><span class="line">而plantuml-viewer不需要，因此我推荐plantuml-viewer</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>安装方法很简单：atom下 File -&gt; Settings -&gt; Install<br><img src="/2018/10/14/windows下atom上搭建PlantUML书写环境/plantuml_plugin.png" alt="logo"></p>
<h1 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h1><p>plantuml-viewer按如下配置<br><img src="/2018/10/14/windows下atom上搭建PlantUML书写环境/plantuml_viewer_setting.png" alt="logo"></p>
<ul>
<li>Charset配置成utf-8在生成图形的时候中文不会乱码</li>
<li>graphviz从官网下载后安装到自定义位置，在plant-viewer中指定dot.exe路径</li>
</ul>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>用PlantUML生成工厂模式UML<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@startuml</span><br><span class="line">skinparam classAttributeIconSize 0</span><br><span class="line">class Product</span><br><span class="line">class ConcreteProduct</span><br><span class="line">class Creator &#123;</span><br><span class="line">  + &#123;abstract&#125; FactoryMethod()</span><br><span class="line">&#125;</span><br><span class="line">class ConcreteCreator &#123;</span><br><span class="line">  + FactoryMethod()</span><br><span class="line">&#125;</span><br><span class="line">Product &lt;|-- ConcreteProduct</span><br><span class="line">Creator &lt;|-- ConcreteCreator</span><br><span class="line">ConcreteProduct &lt;.l. ConcreteCreator</span><br><span class="line">note left of Product: 定义工厂方法所创建的对象的接口</span><br><span class="line">note right of Creator: 声明工厂方法，该方法返回一个Product类型的对象</span><br><span class="line">note left of ConcreteProduct: 具体产品，实现了Product的接口</span><br><span class="line">note right of ConcreteCreator: 重定义工厂方法以返回一个ConcreteProduct实例</span><br><span class="line">@enduml</span><br></pre></td></tr></table></figure></p>
<p>效果图<br><img src="/2018/10/14/windows下atom上搭建PlantUML书写环境/3.png" alt="logo"></p>
<p><a href="http://plantuml.com/" target="_blank" rel="noopener">plantuml语法</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PlantUML是一款使用纯文本绘制UML图的开源软件。它的优点是能够帮助作者把精力集中到内容的书写上而不是格式的调整。本文介绍了一种在windows环境下atom编辑器上搭建PlantUML书写环境的方法。&lt;/p&gt;
&lt;h1 id=&quot;工具准备&quot;&gt;&lt;a href=&quot;#工具准备
    
    </summary>
    
      <category term="atom" scheme="https://smallwenzi.github.io/categories/atom/"/>
    
    
      <category term="plantuml" scheme="https://smallwenzi.github.io/tags/plantuml/"/>
    
      <category term="atom" scheme="https://smallwenzi.github.io/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>Solr的主从模式Master-Slave</title>
    <link href="https://smallwenzi.github.io/2018/10/14/olr%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%A8%A1%E5%BC%8FMaster-Slave/"/>
    <id>https://smallwenzi.github.io/2018/10/14/olr的主从模式Master-Slave/</id>
    <published>2018-10-14T07:25:00.000Z</published>
    <updated>2018-10-14T07:33:13.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要："><a href="#摘要：" class="headerlink" title="摘要："></a>摘要：</h1><p>如今，为了提高Solr的搜索速度，使其具有很好的容灾能力，往往会配置SolrCloud，但在Solr4之前，还有一种很流行的方式，Master-Slave模式，为什么要提及这种方式，因为我们公司目前用的就是这种方式。</p>
<h1 id="引入Master-Slave"><a href="#引入Master-Slave" class="headerlink" title="引入Master-Slave"></a>引入Master-Slave</h1><p>Solr在查询的时候，特别忌讳进行写操作，因为它是IO阻塞型的。现在的流行的Elasticsearch就对此有很好的改进。在引入Master-Slave以后，将读写分配到不同的服务器上，你可以使用master来做索引，然后使用slaves来做查询。<br>1.在多台服务器上分别搭建好可以独立运行的Solr，参见<a href="https://smallwenzi.github.io/2018/10/13/lr%E6%95%99%E7%A8%8B/">这里</a><br>2.指定其中的一台为Master，只需要在SolrConifg.xml中配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;requestHandler name=&quot;/replication&quot; class=&quot;solr.ReplicationHandler&quot;&gt;</span><br><span class="line">     &lt;lst name=&quot;master&quot;&gt;</span><br><span class="line">         &lt;str name=&quot;enable&quot;&gt;$&#123;enable.master:true&#125;&lt;/str&gt;</span><br><span class="line">         &lt;!--</span><br><span class="line">             Create a backup after &apos;optimize&apos;. Other values can be &apos;commit&apos;, &apos;startup&apos;.</span><br><span class="line">             It is possible to have multiple entries of this config string.</span><br><span class="line">             Note that this is just for backup, replication does not require this.</span><br><span class="line">         --&gt;</span><br><span class="line">         &lt;str name=&quot;backupAfter&quot;&gt;optimize&lt;/str&gt;</span><br><span class="line">         &lt;!-- Replicate on &apos;commit&apos;. &apos;startup&apos; and &apos;optimize&apos; are also the valid values for replicateAfter. --&gt;</span><br><span class="line">         &lt;str name=&quot;replicateAfter&quot;&gt;commit&lt;/str&gt;</span><br><span class="line">         &lt;!-- If configuration files need to be replicated give the names here, separated by comma --&gt;</span><br><span class="line">         &lt;str name=&quot;confFiles&quot;&gt;schema.xml,dict.txt,synonyms.txt&lt;/str&gt;</span><br><span class="line">         &lt;str name=&quot;commitReserveDuration&quot;&gt;00:00:10&lt;/str&gt;</span><br><span class="line">     &lt;/lst&gt;</span><br><span class="line">     &lt;int name=&quot;maxNumberOfBackups&quot;&gt;2&lt;/int&gt;</span><br><span class="line">        &lt;/requestHandler&gt;</span><br></pre></td></tr></table></figure></p>
<p>3.指定其他多有的服务为Slave，只需要分别SolrConifg.xml配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;requestHandler name=&quot;/replication&quot; class=&quot;solr.ReplicationHandler&quot; &gt;</span><br><span class="line">  &lt;lst name=&quot;slave&quot;&gt;</span><br><span class="line">      &lt;str name=&quot;enable&quot;&gt;$&#123;enable.slave:true&#125;&lt;/str&gt;</span><br><span class="line">      &lt;str name=&quot;masterUrl&quot;&gt;http://192.168.1.102:8983/solr/jcg&lt;/str&gt;</span><br><span class="line">      &lt;str name=&quot;pollInterval&quot;&gt;00:00:10&lt;/str&gt;</span><br><span class="line">      &lt;str name=&quot;httpConnTimeout&quot;&gt;5000&lt;/str&gt;</span><br><span class="line">      &lt;str name=&quot;httpReadTimeout&quot;&gt;10000&lt;/str&gt;</span><br><span class="line">   &lt;/lst&gt;</span><br><span class="line">&lt;/requestHandler&gt;</span><br></pre></td></tr></table></figure></p>
<p>4.重启所有的master-slave服务即可</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;摘要：&quot;&gt;&lt;a href=&quot;#摘要：&quot; class=&quot;headerlink&quot; title=&quot;摘要：&quot;&gt;&lt;/a&gt;摘要：&lt;/h1&gt;&lt;p&gt;如今，为了提高Solr的搜索速度，使其具有很好的容灾能力，往往会配置SolrCloud，但在Solr4之前，还有一种很流行的方式，M
    
    </summary>
    
      <category term="solr" scheme="https://smallwenzi.github.io/categories/solr/"/>
    
    
      <category term="solr" scheme="https://smallwenzi.github.io/tags/solr/"/>
    
      <category term="solr-master" scheme="https://smallwenzi.github.io/tags/solr-master/"/>
    
      <category term="solr-slave" scheme="https://smallwenzi.github.io/tags/solr-slave/"/>
    
  </entry>
  
  <entry>
    <title>solr教程</title>
    <link href="https://smallwenzi.github.io/2018/10/13/lr%E6%95%99%E7%A8%8B/"/>
    <id>https://smallwenzi.github.io/2018/10/13/lr教程/</id>
    <published>2018-10-13T05:50:00.000Z</published>
    <updated>2018-10-14T07:09:11.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-为什么选择Apache-Solr"><a href="#1-为什么选择Apache-Solr" class="headerlink" title="1.为什么选择Apache Solr"></a>1.为什么选择Apache Solr</h1><p>Apache Solr是一个功能强大的搜索服务器，它支持REST风格API。Solr是基于Lucene的，Lucene 支持强大的匹配能力，如短语，通配符，连接，分组和更多不同的数据类型。它使用 Apache Zookeeper特别针对高流量进行优化。Apache Solr提供各式各样的功能，我们列出了部分最主要的功能。</p>
<ul>
<li>先进的全文搜索功能。</li>
<li>XML，JSON和HTTP - 基于开放接口标准。</li>
<li>高度可扩展和容错。</li>
<li>同时支持模式和无模式配置。</li>
<li>分页搜索和过滤。</li>
<li>支持像英语，德语，中国，日本，法国和许多主要语言</li>
<li>丰富的文档分析。</li>
</ul>
<h1 id="安装solr"><a href="#安装solr" class="headerlink" title="安装solr"></a>安装solr</h1><p>要首先让从以下位置下载最新版本的Apache Solr：<br><a href="http://lucene.apache.org/solr/downloads.html" target="_blank" rel="noopener">http://lucene.apache.org/solr/downloads.html</a><br>在撰写本文时，可用的稳定版本是7.4.0。<br>一旦Solr的zip文件下载将它解压缩到一个文件夹。提取的文件夹看起来像下面。<br><img src="/2018/10/13/lr教程/1.png" alt="logo"><br>Solr的文件夹</p>
<p>bin文件夹中包含用来启动和停止服务器的脚本。example 文件夹包含几个示例文件。我们将使用其中的一种，以说明Solr如何索引数据。server 文件夹包含logs 文件夹，所有的Solr的日志都写入该文件夹。这将有助于索引过程来检查任何错误日志。在sever文件夹下的Solr文件夹包含不同的集合或核心（core/collection）。对于各集合或核心的配置和数据都存储在相应的集合或核心文件夹。<br>Apache Solr带有一个内置的Jetty服务器。但在我们开始之前，我们必须验证JAVA_HOME已经配置。<br>我们可以使用命令行脚本启动服务器。让我们去solr的bin目录，从命令提示符输入出以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solr start</span><br></pre></td></tr></table></figure></p>
<p>这将启动下的默认端口8983 Solr的服务器。</p>
<p>现在，我们可以在浏览器中打开以下网址和验证，我们的Solr的实例正在运行。solr的管理工具的细节超出了示例的范围。</p>
<p><a href="http://localhost:8983/Solr/" target="_blank" rel="noopener">http://localhost:8983/Solr/</a><br><img src="/2018/10/13/lr教程/2.png" alt="logo"></p>
<h1 id="配置Apache-Solr"><a href="#配置Apache-Solr" class="headerlink" title="配置Apache Solr"></a>配置Apache Solr</h1><p>在本节中，我们将告诉你如何配置的核心/集合作为Solr实例，以及如何定义的字段。Apache Solr附带称为无模式模式的选项。这个选项允许用户构建有效的架构，而无需手动编辑模式文件。但是，在这个例子中，我们将使用架构配置理解Solr的内部。</p>
<h2 id="建立核心（core）"><a href="#建立核心（core）" class="headerlink" title="建立核心（core）"></a>建立核心（core）</h2><p>当Solr的服务器在独立模式下启动的配置称为核心，当它在SolrCloud模式启动的配置称为集合。在这个例子中，我们将有关独立服务器和核心讨论。我们将在以后再讨论SolrCloud。首先，我们需要创建一个核心的索引数据。Solr的创建命令有以下选项：</p>
<p>-c <name> -要创建的核心或集合的名称（必需）。<br>-d <confdir> -配置目录，在SolrCloud模式非常有用。<br>-n <configname> -配置名称。这将默认为核心或集合的名称。<br>-p <port> -本地Solr的实例的端口发送create命令; 默认脚本试图通过寻找运行Solr的实例来检测端口。<br>-s <shards> -Number of shards to split a collection into, default is 1.<br>-rf <replicas> -集合中的每个文件的份数。默认值是1。<br>在这个例子中，我们将使用的核心名称和配置目录-d参数-c参数。对于所有其它参数我们使用默认设置。</replicas></shards></port></configname></confdir></name></p>
<p>现在在命令窗口浏览 solr-7.4.0\bin文件夹，并发出以下命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solr create -c jcg</span><br></pre></td></tr></table></figure></p>
<p>我们可以看到在命令窗口中下面的输出。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Creating new core &apos;jcg&apos; using command:</span><br><span class="line">http://localhost:8983/solr/admin/cores?action=CREATE&amp;name=jcg&amp;instanceDir=jcg</span><br><span class="line"> &#123;</span><br><span class="line"> &quot;responseHeader&quot;:&#123;</span><br><span class="line"> &quot;status&quot;:0,</span><br><span class="line"> &quot;QTime&quot;:663&#125;,</span><br><span class="line"> &quot;core&quot;:&quot;jcg&quot;&#125;</span><br><span class="line"> ``` </span><br><span class="line">现在我们导航到以下网址，我们可以看到JCG核心被填充在核心选择器上。还可以看到核心的统计信息。</span><br><span class="line">http://localhost:8983/Solr</span><br><span class="line">![logo](lr教程/3.png)</span><br><span class="line"></span><br><span class="line">## 修改Schema.xml文件</span><br><span class="line">我们需要修改schema.xml中文件的文件夹下，server\solr\jcg\conf包含的字段。我们将使用随Solr的安装索引附带的示例文件“books.csv”之一。该文件所在的文件夹下  的solr-7.4.0\example\exampledocs</span><br><span class="line"></span><br><span class="line">现在，我们定位到该文件夹  server\solr目录。你会看到一个名为JCG的文件夹被创建。子文件夹conf和data分别拥有核心的配置和索引的数据。</span><br><span class="line">现在编辑\server\solr\jcg\conf\server\solr\jcg\conf\schema.xml文件，设置唯一元素后添加以下内容。</span><br><span class="line">我们已经设置了属性索引为true。这指定字段用于索引和记录可以使用索引进行检索。该值设置为false将只存储领域，但不能进行查询。</span><br><span class="line">另外请注意另一个属性stored并将其设置为true。这指定字段被存储，并且可以在输出被返回。将此字段设置为假将使字段唯一索引，并且不能在输出进行检索。</span><br><span class="line">我们已经分配给存在于此处的“books.csv”文件中的字段的类型。在CSV文件“ID”第一场由索引Schema.xml文件的唯一键自动元素的照顾。如果你注意，我们已经略过字段series_t，sequence_i和genre_s未做任何条目。但是，当我们执行索引时，所有这些字段都被索引且没有任何问题。如果你想知道这种情况需要在Schema.xml文件的dynamicField部分一探究竟。</span><br><span class="line">[schema.xml](schema.xml)</span><br><span class="line"></span><br><span class="line">既然我们已经修改了配置，我们必须停止和启动服务器。要做到这一点，我们需要通过命令行发出从bin目录下面的命令。</span><br></pre></td></tr></table></figure></p>
<p>Solr  stop -all<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">服务器将停止现在。现在启动服务器问题从bin目录中通过命令行运行以下命令。</span><br></pre></td></tr></table></figure></p>
<p>Solr start<br>```</p>
<h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><p>Apache Solr带有一个叫做SimplePostTool独立的Java程序。这个程序被打包成JAR,在安装目录下 example\exampledocs可看到。<br>现在，我们在命令行定位到example\exampledocs文件夹，然后键入以下命令。你会看到一堆选项，使用的工具。<br><img src="/2018/10/13/lr教程/4.png" alt="logo"><br>正如我们前面所说，我们将索引“books.csv”文件中的数据。我们将导航到solr-7.4.0\example\exampledocs在命令提示符并发出以下命令。<br><img src="/2018/10/13/lr教程/5.png" alt="logo"><br>现在我们导航到以下网址并选择核心JCG。<br><a href="http://localhost:8983/solr" target="_blank" rel="noopener">http://localhost:8983/solr</a><br><img src="/2018/10/13/lr教程/6.png" alt="logo"><br>Solr的JCG核心数据<br>就拿在统计部分仔细一看，该民文档参数将显示索引的行数。</p>
<h1 id="访问索引的文档"><a href="#访问索引的文档" class="headerlink" title="访问索引的文档"></a>访问索引的文档</h1><p>Apache Solr提供了一种基于REST API来访问的数据，并还提供了不同的参数，以检索数据。我们将向您展示一些基于场景的查询。</p>
<h2 id="按名称搜索"><a href="#按名称搜索" class="headerlink" title="按名称搜索"></a>按名称搜索</h2><p>我们将用它的名字检索书的细节。要做到这一点，我们将使用下面的语法。URL中的参数“Q”是查询事件。<br>打开浏览器下列URL。<br><a href="http://localhost:8983/solr/jcg/select?q=name:&quot;A" target="_blank" rel="noopener">http://localhost:8983/solr/jcg/select?q=name:&quot;A</a> Clash of Kings”<br>输出将在下面，如图所示。<br><img src="/2018/10/13/lr教程/7.png" alt="logo"></p>
<h2 id="首字母搜索"><a href="#首字母搜索" class="headerlink" title="首字母搜索"></a>首字母搜索</h2><p>现在我们将告诉你如何搜索记录，如果我们只知道起始字母或单词，不记得完整的标题。我们可以用下面的查询检索结果。<br><a href="http://localhost:8983/solr/jcg/select?q=name:&quot;A" target="_blank" rel="noopener">http://localhost:8983/solr/jcg/select?q=name:&quot;A</a>“<br>输出将列出所有的书籍字母A盯着<br><img src="/2018/10/13/lr教程/8.png" alt="logo"></p>
<h2 id="搜索使用通配符"><a href="#搜索使用通配符" class="headerlink" title="搜索使用通配符"></a>搜索使用通配符</h2><p>Solr的支持通配符搜索。我们将下面的展示如何检索所有书名包含“of”的书。<br><a href="http://localhost:8983/solr/jcg/select?q=name:&quot;*of" target="_blank" rel="noopener">http://localhost:8983/solr/jcg/select?q=name:&quot;*of</a>“<br><img src="/2018/10/13/lr教程/9.png" alt="logo"></p>
<h2 id="搜索使用的条件"><a href="#搜索使用的条件" class="headerlink" title="搜索使用的条件"></a>搜索使用的条件</h2><p>Solr的支持条件的搜索。我们可以设置条件，我们的查询提供了“FQ”参数。在下面我们将告诉你如何查询价格低于￥6的书。<br><a href="http://localhost:8983/solr/jcg/select?q=*&amp;fq=price:[0" target="_blank" rel="noopener">http://localhost:8983/solr/jcg/select?q=*&amp;fq=price:[0</a> TO 6]<br>输出将只列出这是低于$ 6的书籍。<br><img src="/2018/10/13/lr教程/10.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-为什么选择Apache-Solr&quot;&gt;&lt;a href=&quot;#1-为什么选择Apache-Solr&quot; class=&quot;headerlink&quot; title=&quot;1.为什么选择Apache Solr&quot;&gt;&lt;/a&gt;1.为什么选择Apache Solr&lt;/h1&gt;&lt;p&gt;Apache
    
    </summary>
    
      <category term="solr" scheme="https://smallwenzi.github.io/categories/solr/"/>
    
    
      <category term="solr" scheme="https://smallwenzi.github.io/tags/solr/"/>
    
  </entry>
  
  <entry>
    <title>docker的使用</title>
    <link href="https://smallwenzi.github.io/2018/06/11/docker%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://smallwenzi.github.io/2018/06/11/docker的使用/</id>
    <published>2018-06-11T12:50:00.000Z</published>
    <updated>2018-10-13T05:35:19.099Z</updated>
    
    <content type="html"><![CDATA[<p>1 docker build出现Temporary failure resolving<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi/etc/systemd/system/multi-user.target.wants/docker.service ExecStart=/usr/bin/dockerd </span><br><span class="line">添加 --dns=8.8.8.8</span><br><span class="line">重新加载配置</span><br><span class="line">&gt;systemctl daemon-reload </span><br><span class="line"> --启动docker</span><br><span class="line">&gt;systemctl start docker</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1 docker build出现Temporary failure resolving&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s
    
    </summary>
    
      <category term="docker" scheme="https://smallwenzi.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>十二 jenkins 配置maven打包git代码</title>
    <link href="https://smallwenzi.github.io/2018/05/11/-jenkins-%E9%85%8D%E7%BD%AEmaven%E6%89%93%E5%8C%85git%E4%BB%A3%E7%A0%81/"/>
    <id>https://smallwenzi.github.io/2018/05/11/-jenkins-配置maven打包git代码/</id>
    <published>2018-05-11T15:36:00.000Z</published>
    <updated>2018-05-14T13:10:45.233Z</updated>
    
    <content type="html"><![CDATA[<p>一 <a href="/2018/05/11/-jenkins-配置git证书/">jenkins-配置git证书</a><br>二 <a href="/2018/05/08/安装jenkins/">安装jenkins</a><br>三 <a href="/2018/05/11/enkinx-配置任务/">jenkins 配置java和Maven环境</a></p>
<p><img src="/2018/05/11/-jenkins-配置maven打包git代码/总图.png" alt="logo"></p>
<h1 id="一配置任务"><a href="#一配置任务" class="headerlink" title="一配置任务"></a>一配置任务</h1><p>1.1点击 创建一个新任务<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/1.png" alt="logo"><br>1.2 输入名称  选择自由风格的软件项目<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/2.png" alt="logo"><br>1.3新增文本参数<br>1.3.1参数docker.image.prefix: 私有库域名<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/3.png" alt="logo"><br>1.3.2参数docker.registry：私有库地址<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/4.png" alt="logo"><br>1.3.3参数docker.servcerId：刚才maven配置 私有库用户名和密码<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/5.png" alt="logo"><br>1.3.4参数version<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/6.png" alt="logo"><br>1.4配置 git库<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/7.png" alt="logo"><br>1.5构建步骤添加 执行Shell脚本<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/8.png" alt="logo"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">脚本命令：</span><br><span class="line">echo $WORKSPACE</span><br><span class="line">echo $MAVEN_HOME</span><br><span class="line">cd $WORKSPACE/Eureka</span><br><span class="line">$MAVEN_HOME/bin/mvn clean package docker:build -DpushImage -Ddocker.image.prefix=$docker_image_prefix -Ddocker.registry=$docker_registry -Ddocker.servcerId=$docker_servcerId -Dtag.version=$version</span><br></pre></td></tr></table></figure></p>
<p>保存</p>
<h1 id="二-配置jenkins用户可以执行docker-命令"><a href="#二-配置jenkins用户可以执行docker-命令" class="headerlink" title="二 配置jenkins用户可以执行docker 命令"></a>二 配置jenkins用户可以执行docker 命令</h1><p>liunx用户 使用jenkins 用户启动jenkins<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/systemd/system/multi-user.target.wants/docker.service</span><br><span class="line"> ExecStart=/usr/bin/dockerd  -G jenkins</span><br></pre></td></tr></table></figure></p>
<p> -G表示 jenkins用户可以执行docker 命令<br> <img src="/2018/05/11/-jenkins-配置maven打包git代码/9.png" alt="logo"></p>
<p> 重新加载配置<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></p>
<p>  重新启动docker<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></p>
<h1 id="三执行任务"><a href="#三执行任务" class="headerlink" title="三执行任务"></a>三执行任务</h1><p>3.1 点击 Build with Parameters<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/10.png" alt="logo"><br>3.2 点击开始创建<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/11.png" alt="logo"><br>3.3查看脚本执行情况<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/12.png" alt="logo"><br>3.4成功后查看私有仓库目录<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/132.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一 &lt;a href=&quot;/2018/05/11/-jenkins-配置git证书/&quot;&gt;jenkins-配置git证书&lt;/a&gt;&lt;br&gt;二 &lt;a href=&quot;/2018/05/08/安装jenkins/&quot;&gt;安装jenkins&lt;/a&gt;&lt;br&gt;三 &lt;a href=&quot;/2018/05/
    
    </summary>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/categories/jenkins/"/>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
      <category term="git" scheme="https://smallwenzi.github.io/tags/git/"/>
    
      <category term="maven" scheme="https://smallwenzi.github.io/tags/maven/"/>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>十一 jenkins 配置git证书</title>
    <link href="https://smallwenzi.github.io/2018/05/11/-jenkins-%E9%85%8D%E7%BD%AEgit%E8%AF%81%E4%B9%A6/"/>
    <id>https://smallwenzi.github.io/2018/05/11/-jenkins-配置git证书/</id>
    <published>2018-05-11T15:26:00.000Z</published>
    <updated>2018-05-11T15:38:51.977Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/2018/05/08/三）linux-安装-GIT（root用户）/">linux 安装 GIT（root用户）</a><br><a href="/2018/05/08/安装jenkins/">安装jenkins</a></p>
<h1 id="一-linux-生成RSA-key"><a href="#一-linux-生成RSA-key" class="headerlink" title="一 linux 生成RSA key"></a>一 linux 生成RSA key</h1><p>linux远程登录ssh ywtan@localhost<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure></p>
<p><img src="/2018/05/11/-jenkins-配置git证书/1.png" alt="logo"></p>
<p>全部回车<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat .ssh/id_rsa(这是刚才设置 rsa_key)</span><br></pre></td></tr></table></figure></p>
<h1 id="二-jenkins-配置git证书"><a href="#二-jenkins-配置git证书" class="headerlink" title="二 jenkins 配置git证书"></a>二 jenkins 配置git证书</h1><p>2.1 在jenkins 页面点击credentials<br><img src="/2018/05/11/-jenkins-配置git证书/2.png" alt="logo"><br>2.2 点击 system<br><img src="/2018/05/11/-jenkins-配置git证书/3.png" alt="logo"><br>2.3 点击 Global credentials (unrestricted)<br><img src="/2018/05/11/-jenkins-配置git证书/4.png" alt="logo"><br>2.4 add Credentials<br><img src="/2018/05/11/-jenkins-配置git证书/5.png" alt="logo"><br>2.5 如图所示填写， key是刚才生成的key，最后点击保存<br><img src="/2018/05/11/-jenkins-配置git证书/6.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;/2018/05/08/三）linux-安装-GIT（root用户）/&quot;&gt;linux 安装 GIT（root用户）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/2018/05/08/安装jenkins/&quot;&gt;安装jenkins&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;一-li
    
    </summary>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/categories/jenkins/"/>
    
    
      <category term="git" scheme="https://smallwenzi.github.io/tags/git/"/>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>十）jenkins 配置java和Maven环境</title>
    <link href="https://smallwenzi.github.io/2018/05/11/enkinx-%E9%85%8D%E7%BD%AE%E4%BB%BB%E5%8A%A1/"/>
    <id>https://smallwenzi.github.io/2018/05/11/enkinx-配置任务/</id>
    <published>2018-05-11T15:01:00.000Z</published>
    <updated>2018-05-11T15:27:28.001Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<br><a href="/2018/05/11/九-linux配置java和maven/">linux配置java和maven</a><br><a href="2018/05/08/（六）docker安装本地仓库（root用户）/">docker安装本地仓库</a><br><a href="/2018/05/08/安装jenkins/">安装jenkins</a></p>
<h1 id="一配置maven"><a href="#一配置maven" class="headerlink" title="一配置maven"></a>一配置maven</h1><p>/app/apache-maven-3.2.3/conf/settings.xml<br>库位置<br><img src="/2018/05/11/enkinx-配置任务/1.png" alt="logo"><br>以下是私有docker库 用户名密码）<br><img src="/2018/05/11/enkinx-配置任务/2.png" alt="logo"></p>
<h1 id="二-jenkins-配置java和Maven环境"><a href="#二-jenkins-配置java和Maven环境" class="headerlink" title="二 jenkins 配置java和Maven环境"></a>二 jenkins 配置java和Maven环境</h1><p>2.1点击系统管理<br><img src="/2018/05/11/enkinx-配置任务/11278290-aab55082195f5c56.png" alt="logo"><br>2.2 点击 全局工具配置<br><img src="/2018/05/11/enkinx-配置任务/3.png" alt="logo"><br>2.3 如下图配置 java和maven.<br><img src="/2018/05/11/enkinx-配置任务/4.png" alt="logo"></p>
<p><img src="/2018/05/11/enkinx-配置任务/5.png" alt="logo"><br>2.4 点击 保存 再次点击 系统设置<br><img src="/2018/05/11/enkinx-配置任务/6.png" alt="logo"><br>2.5 再次配置java和maven目录<br><img src="/2018/05/11/enkinx-配置任务/7.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;/2018/05/11/九-linux配置java和maven/&quot;&gt;linux配置java和maven&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;2018/05/08/（六）docker安装本地仓库（root用户）/&quot;&gt;docker安装本地仓库&lt;/a&gt;
    
    </summary>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/categories/jenkins/"/>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
      <category term="maven" scheme="https://smallwenzi.github.io/tags/maven/"/>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/tags/jenkins/"/>
    
      <category term="java" scheme="https://smallwenzi.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>九 linux配置java和maven</title>
    <link href="https://smallwenzi.github.io/2018/05/11/%E4%B9%9D-linux%E9%85%8D%E7%BD%AEjava%E5%92%8Cmaven/"/>
    <id>https://smallwenzi.github.io/2018/05/11/九-linux配置java和maven/</id>
    <published>2018-05-11T14:46:00.000Z</published>
    <updated>2018-05-11T14:59:51.185Z</updated>
    
    <content type="html"><![CDATA[<p>安装链接：<br><a href="/2018/05/08/）oracle-VM安装red-hat-liunx/">oracle VM安装red hat liunx</a></p>
<h1 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h1><p>1 从<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a> 页面下载jdk-8u171-linux-x64.tar.gz<br>2 上传文件至linux服务器 /app<br>3 在/app目录 执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf jdk-8u171-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></p>
<h1 id="安装maven"><a href="#安装maven" class="headerlink" title="安装maven:"></a>安装maven:</h1><p>1 在linux里/app执行：wget <a href="https://archive.apache.org/dist/maven/maven-3/3.2.3/binaries/apache-maven-3.2.3-bin.tar.gz" target="_blank" rel="noopener">https://archive.apache.org/dist/maven/maven-3/3.2.3/binaries/apache-maven-3.2.3-bin.tar.gz</a><br>2 在/app目录 执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf  apache-maven-3.2.3-bin.tar.gz</span><br></pre></td></tr></table></figure></p>
<p>3 在/app/apache-maven-3.2.3/bin 目录执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./mvn</span><br></pre></td></tr></table></figure></p>
<h1 id="配置环境-root用户"><a href="#配置环境-root用户" class="headerlink" title="配置环境(root用户)"></a>配置环境(root用户)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure>
<p>配置maven 和java环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME=/app/apache-maven-3.2.3</span><br><span class="line">export MAVEN_HOME</span><br><span class="line">export PATH=$PATH:$MAVEN_HOME/bin</span><br><span class="line">export JAVA_HOME=/app/jdk1.8.0_171</span><br><span class="line">export JAVA_HOME</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure></p>
<p>保存完成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -v</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装链接：&lt;br&gt;&lt;a href=&quot;/2018/05/08/）oracle-VM安装red-hat-liunx/&quot;&gt;oracle VM安装red hat liunx&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;安装java&quot;&gt;&lt;a href=&quot;#安装java&quot; class=&quot;heade
    
    </summary>
    
      <category term="linux" scheme="https://smallwenzi.github.io/categories/linux/"/>
    
    
      <category term="maven" scheme="https://smallwenzi.github.io/tags/maven/"/>
    
      <category term="java" scheme="https://smallwenzi.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>八）安装jenkins</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%E5%AE%89%E8%A3%85jenkins/"/>
    <id>https://smallwenzi.github.io/2018/05/08/安装jenkins/</id>
    <published>2018-05-08T10:03:00.000Z</published>
    <updated>2018-05-08T10:14:48.416Z</updated>
    
    <content type="html"><![CDATA[<p>参考：</p>
<p>1<a href="/2018/05/08/）oracle-VM安装red-hat-liunx/">oracle VM安装red hat liunx</a></p>
<p>2<a href="/2018/05/08/）Red-Hat-升级-rpm软件、YUM软件（root用户）/">升级RPM和YUM 包</a></p>
<h1 id="1-安装java环境"><a href="#1-安装java环境" class="headerlink" title="1 安装java环境"></a>1 安装java环境</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y java</span><br></pre></td></tr></table></figure>
<h1 id="2-安装wget"><a href="#2-安装wget" class="headerlink" title="2 安装wget"></a>2 安装wget</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget</span><br></pre></td></tr></table></figure>
<h1 id="3-获取jenkins的配置"><a href="#3-获取jenkins的配置" class="headerlink" title="3 获取jenkins的配置"></a>3 获取jenkins的配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat/jenkins.repo</span><br></pre></td></tr></table></figure>
<h1 id="4-导入jenkinskey"><a href="#4-导入jenkinskey" class="headerlink" title="4 导入jenkinskey"></a>4 导入jenkinskey</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> rpm --import http://pkg.jenkins.io/redhat/jenkins.io.key</span><br><span class="line"> ``</span><br><span class="line"></span><br><span class="line"># 5 安装jenkins</span><br></pre></td></tr></table></figure>
<p>yum install jenkins<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 6 jenkins的配置文件：</span><br></pre></td></tr></table></figure></p>
<p>/etc/sysconfig/jenkins<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 7 运行 jenkins</span><br></pre></td></tr></table></figure></p>
<p>service jenkins start<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 8 查看日志：</span><br></pre></td></tr></table></figure></p>
<p>tail-f  /var/log/jenkins/jenkins.log<br>```<br><img src="/2018/05/08/安装jenkins/11278290-b7f1229f3c16a906.png" alt="logo"><br>211是jenkins key</p>
<p>如果不能访问请关闭防火墙<br>iptables -F</p>
<h1 id="9-浏览器访问：192-168-137-8：8080"><a href="#9-浏览器访问：192-168-137-8：8080" class="headerlink" title="9 浏览器访问：192.168.137.8：8080"></a>9 浏览器访问：192.168.137.8：8080</h1><p><img src="/2018/05/08/安装jenkins/11278290-e2f6e1054f7f923a.png" alt="logo"><br>输入21120240a2cb4e8e83065dc7c71a5b88<br>点击确定</p>
<h1 id="10-安装推荐的插件"><a href="#10-安装推荐的插件" class="headerlink" title="10 安装推荐的插件"></a>10 安装推荐的插件</h1><p><img src="/2018/05/08/安装jenkins/11278290-9e1548cc032d002c.png" alt="logo"></p>
<h1 id="11-等等安装完成"><a href="#11-等等安装完成" class="headerlink" title="11  等等安装完成"></a>11  等等安装完成</h1><p><img src="/2018/05/08/安装jenkins/11278290-a2000d90816960d4.png" alt="logo"><br>12 创建用户:  输入完信息 点击 确定：<br><img src="/2018/05/08/安装jenkins/11278290-364c455c39845e06.png" alt="logo"><br>13 点击save and finish</p>
<p><img src="/2018/05/08/安装jenkins/11278290-6cce522c3a59044b.png" alt="logo"><br>14 安装成功<br><img src="/2018/05/08/安装jenkins/11278290-aab55082195f5c56.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;1&lt;a href=&quot;/2018/05/08/）oracle-VM安装red-hat-liunx/&quot;&gt;oracle VM安装red hat liunx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2&lt;a href=&quot;/2018/05/08/）Red-Hat-升级-rpm软件、
    
    </summary>
    
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>spring cloud+docker+git+maven+jenkins+Kubernetes 目录</title>
    <link href="https://smallwenzi.github.io/2018/05/08/ring-cloud-docker-git-maven-jenkins-Kubernetes-%E7%9B%AE%E5%BD%95/"/>
    <id>https://smallwenzi.github.io/2018/05/08/ring-cloud-docker-git-maven-jenkins-Kubernetes-目录/</id>
    <published>2018-05-08T09:45:58.000Z</published>
    <updated>2018-05-08T09:57:40.039Z</updated>
    
    <content type="html"><![CDATA[<p>图：<br><img src="/2018/05/08/ring-cloud-docker-git-maven-jenkins-Kubernetes-目录/11278290-faac5fbb39c76314.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;图：&lt;br&gt;&lt;img src=&quot;/2018/05/08/ring-cloud-docker-git-maven-jenkins-Kubernetes-目录/11278290-faac5fbb39c76314.png&quot; alt=&quot;logo&quot;&gt;&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>七）maven build docker and push Image</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%E4%B8%83%EF%BC%89maven-build-docker-and-push-Image/"/>
    <id>https://smallwenzi.github.io/2018/05/08/七）maven-build-docker-and-push-Image/</id>
    <published>2018-05-08T09:36:00.000Z</published>
    <updated>2018-05-08T09:42:04.873Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<a href="/2018/05/08/（六）docker安装本地仓库（root用户）/">docker安装本地仓库</a><br>使用maven 打包jar成docker镜像 并发布到镜像库</p>
<h1 id="1-maven-settings-xml配置server-节点添加"><a href="#1-maven-settings-xml配置server-节点添加" class="headerlink" title="1 maven settings.xml配置server 节点添加"></a>1 maven settings.xml配置server 节点添加</h1><p>（这是私有库 用户名密码）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;server&gt;</span><br><span class="line">		&lt;id&gt;docker-hub&lt;/id&gt;</span><br><span class="line">		&lt;username&gt;testuser&lt;/username&gt;</span><br><span class="line">		&lt;password&gt;testpassword&lt;/password&gt;</span><br><span class="line">      &lt;/server&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="2-项目-pom-xml"><a href="#2-项目-pom-xml" class="headerlink" title="2 项目 pom.xml"></a>2 项目 pom.xml</h1><p>properties 节点</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;docker.image.prefix&gt;reg.itmuch.com&lt;/docker.image.prefix&gt;</span><br><span class="line">&lt;docker.registry&gt;https://reg.itmuch.com/v1&lt;/docker.registry&gt;</span><br><span class="line">   &lt;tag.version&gt;1.0.0&lt;/tag.version&gt;</span><br><span class="line">    &lt;docker.servcerId&gt;docker-hub&lt;/docker.servcerId&gt;</span><br></pre></td></tr></table></figure>
<p>maven 配置组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    &lt;!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin --&gt;</span><br><span class="line">       &lt;plugin&gt;</span><br><span class="line">           &lt;groupId&gt;com.spotify&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class="line">           &lt;dependencies&gt;</span><br><span class="line">           &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-logging&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">           &lt;/dependencies&gt;</span><br><span class="line">           &lt;configuration&gt;</span><br><span class="line">              	&lt;!-- 镜像名:tag  --&gt;</span><br><span class="line">              &lt;imageName&gt;$&#123;docker.image.prefix&#125;/$&#123;project.artifactId&#125;:$&#123;tag.version&#125;&lt;/imageName&gt;</span><br><span class="line">   &lt;!-- 指定Dockerfile所在的路径  --&gt;</span><br><span class="line">               &lt;dockerDirectory&gt;$&#123;project.basedir&#125;/docker&lt;/dockerDirectory&gt;</span><br><span class="line">               &lt;!-- 以下两行是为了docker push到DockerHub使用的。 --&gt;</span><br><span class="line">               &lt;serverId&gt;$&#123;docker.servcerId&#125;&lt;/serverId&gt;</span><br><span class="line">               &lt;registryUrl&gt;$&#123;docker.registry&#125;&lt;/registryUrl&gt;</span><br><span class="line">   			   &lt;resources&gt;</span><br><span class="line">                   &lt;resource&gt;</span><br><span class="line">                       &lt;targetPath&gt;/&lt;/targetPath&gt;</span><br><span class="line">                       &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;</span><br><span class="line">                       &lt;include&gt;$&#123;project.build.finalName&#125;.jar&lt;/include&gt;</span><br><span class="line">                   &lt;/resource&gt;</span><br><span class="line">               &lt;/resources&gt;</span><br><span class="line">           &lt;/configuration&gt;</span><br><span class="line">       &lt;/plugin&gt;</span><br></pre></td></tr></table></figure></p>
<p>参考<a href="https://github.com/spotify/docker-maven-plugin" target="_blank" rel="noopener">https://github.com/spotify/docker-maven-plugin</a></p>
<h1 id="3-dockerFile文件放在项目根目录下docker目录"><a href="#3-dockerFile文件放在项目根目录下docker目录" class="headerlink" title="3 dockerFile文件放在项目根目录下docker目录"></a>3 dockerFile文件放在项目根目录下docker目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">FROM openjre</span><br><span class="line">MAINTAINER killko &lt;ydhana@isoftstone.com&gt;</span><br><span class="line">ENV EUREKA_INSTANCE_NAME=eureka</span><br><span class="line">ENV EUREKA_SERVICEURL=http://eureka:6080/eureka</span><br><span class="line">EXPOSE 6080</span><br><span class="line">#统一时区</span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br><span class="line"></span><br><span class="line">COPY eureka*.jar /Eureka.jar</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;-Djava.net.preferIPv4Stack=true&quot;,&quot;/Eureka.jar&quot;]</span><br></pre></td></tr></table></figure>
<h1 id="4-maven-build-docker-and-push-Image："><a href="#4-maven-build-docker-and-push-Image：" class="headerlink" title="4 maven build docker and push Image："></a>4 maven build docker and push Image：</h1><p>mvn clean package docker:build -DpushImage</p>
<p>（需要注意：运行环境必须有docker）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;链接：&lt;a href=&quot;/2018/05/08/（六）docker安装本地仓库（root用户）/&quot;&gt;docker安装本地仓库&lt;/a&gt;&lt;br&gt;使用maven 打包jar成docker镜像 并发布到镜像库&lt;/p&gt;
&lt;h1 id=&quot;1-maven-settings-xml配置se
    
    </summary>
    
      <category term="docker" scheme="https://smallwenzi.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
      <category term="maven" scheme="https://smallwenzi.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>docker -mysql</title>
    <link href="https://smallwenzi.github.io/2018/05/08/ocker-mysql/"/>
    <id>https://smallwenzi.github.io/2018/05/08/ocker-mysql/</id>
    <published>2018-05-08T09:28:00.000Z</published>
    <updated>2018-05-08T09:34:24.586Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<br><a href="/2018/05/08/（四）安装docker（root用户）/">安装docker</a></p>
<h1 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure>
<h1 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql -p 3306:3306 -v /app/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql</span><br></pre></td></tr></table></figure>
<h1 id="进入mysql进行设置"><a href="#进入mysql进行设置" class="headerlink" title="进入mysql进行设置"></a>进入mysql进行设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a  --获取mysql 容器的id</span><br><span class="line"></span><br><span class="line">docker exec -it 容器id sh</span><br></pre></td></tr></table></figure>
<h1 id="进入Mysql后登录mysql"><a href="#进入Mysql后登录mysql" class="headerlink" title="进入Mysql后登录mysql"></a>进入Mysql后登录mysql</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line">若报root@localhost,请试试mysql -uroot</span><br></pre></td></tr></table></figure>
<h1 id="创建数据库用户"><a href="#创建数据库用户" class="headerlink" title="创建数据库用户"></a>创建数据库用户</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create USER springcloud IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to springcloud;</span><br><span class="line"></span><br><span class="line">create database springclouddb</span><br></pre></td></tr></table></figure>
<h1 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h1><p>若show databases 报错<br>若是 缺没有此mysql.infoschema用户<br>则执行以下sql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create USER &apos;mysql.infoschema&apos; IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">create USER &apos;mysql.session&apos; IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">create USER &apos;mysql.sys&apos;  IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">create USER springcloud IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to &apos;mysql.infoschema&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to &apos;mysql.session&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to &apos;mysql.sys&apos;;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;/2018/05/08/（四）安装docker（root用户）/&quot;&gt;安装docker&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;下载镜像&quot;&gt;&lt;a href=&quot;#下载镜像&quot; class=&quot;headerlink&quot; title=&quot;下载镜像&quot;&gt;&lt;/a&gt;下载镜像
    
    </summary>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
      <category term="mysql" scheme="https://smallwenzi.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>（六）docker安装本地仓库（root用户）</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%EF%BC%88%E5%85%AD%EF%BC%89docker%E5%AE%89%E8%A3%85%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%EF%BC%88root%E7%94%A8%E6%88%B7%EF%BC%89/"/>
    <id>https://smallwenzi.github.io/2018/05/08/（六）docker安装本地仓库（root用户）/</id>
    <published>2018-05-08T09:09:00.000Z</published>
    <updated>2019-05-06T07:50:59.709Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<br><a href="/2018/05/08/（四）安装docker（root用户）/">安装docker</a></p>
<p>创建使用仓库，并设置https 及安全访问</p>
<h1 id="1下载镜像"><a href="#1下载镜像" class="headerlink" title="1下载镜像"></a>1下载镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker pull registry</span><br></pre></td></tr></table></figure>
<h1 id="2-创建目录"><a href="#2-创建目录" class="headerlink" title="2 创建目录"></a>2 创建目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mkdir -p ~/certs</span><br></pre></td></tr></table></figure>
<h1 id="3-进入目录"><a href="#3-进入目录" class="headerlink" title="3 进入目录"></a>3 进入目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; cd ~/certs</span><br></pre></td></tr></table></figure>
<h1 id="4-创建域名证书"><a href="#4-创建域名证书" class="headerlink" title="4 创建域名证书"></a>4 创建域名证书</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; openssl genrsa -out rep.itmuch.com.key 2048</span><br></pre></td></tr></table></figure>
<h1 id="5-创建证书"><a href="#5-创建证书" class="headerlink" title="5 创建证书"></a>5 创建证书</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; openssl req -newkey rsa:4096 -nodes -sha256 -keyout \ rep.itmuch.com.key -x509 -days 365 -out \ rep.itmuch.com.crt  </span><br><span class="line"></span><br><span class="line">Country Name (2 letter code) [XX]:       # 你的国家名称</span><br><span class="line"></span><br><span class="line">CN State or Province Name (full name) []:GD    # 省份</span><br><span class="line"></span><br><span class="line">Locality Name (eg, city) [Default City]:GZ      # 所在城市</span><br><span class="line"></span><br><span class="line">Organization Name (eg, company) [DefaultCompany Ltd]:test     # 组织名称</span><br><span class="line"></span><br><span class="line">Organizational Unit Name (eg, section)[]:test      # 组织单元名称</span><br><span class="line"></span><br><span class="line">Common Name (eg, your name or your server&apos;shostname) []:rep.itmuch.com    # 域名</span><br><span class="line"></span><br><span class="line">Email Address []:     # 邮箱</span><br></pre></td></tr></table></figure>
<h1 id="3-复制证书至docker"><a href="#3-复制证书至docker" class="headerlink" title="3 复制证书至docker"></a>3 复制证书至docker</h1><h2 id="3-1创建目录"><a href="#3-1创建目录" class="headerlink" title="3.1创建目录"></a>3.1创建目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mkdir -p /etc/docker/certs.d/rep.itmuch.com</span><br></pre></td></tr></table></figure>
<h2 id="3-2-复制证书至docker目录"><a href="#3-2-复制证书至docker目录" class="headerlink" title="3.2 复制证书至docker目录"></a>3.2 复制证书至docker目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; cp ~/certs/rep.itmuch.com.crt /etc/docker/certs.d/rep.itmuch.com/</span><br></pre></td></tr></table></figure>
<h2 id="3-3-重启docker"><a href="#3-3-重启docker" class="headerlink" title="3.3 重启docker"></a>3.3 重启docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; systemctl restart docker</span><br></pre></td></tr></table></figure>
<h1 id="4-设置用户名和密码"><a href="#4-设置用户名和密码" class="headerlink" title="4 设置用户名和密码"></a>4 设置用户名和密码</h1><h2 id="4-1-安装-httpd-tools"><a href="#4-1-安装-httpd-tools" class="headerlink" title="4.1 安装 httpd-tools"></a>4.1 安装 httpd-tools</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; yum install httpd-tools</span><br></pre></td></tr></table></figure>
<h2 id="4-2-当前登录用户"><a href="#4-2-当前登录用户" class="headerlink" title="4.2 当前登录用户"></a>4.2 当前登录用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; cd~</span><br></pre></td></tr></table></figure>
<h2 id="4-3-创建目录"><a href="#4-3-创建目录" class="headerlink" title="4.3 创建目录"></a>4.3 创建目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;mkdir auth</span><br></pre></td></tr></table></figure>
<h2 id="4-4创建用户名和密码"><a href="#4-4创建用户名和密码" class="headerlink" title="4.4创建用户名和密码"></a>4.4创建用户名和密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -Bbn testuser testpassword &gt; auth/htpasswd</span><br></pre></td></tr></table></figure>
<h2 id="5-运行"><a href="#5-运行" class="headerlink" title="5 运行"></a>5 运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 443:5000   \-v /root/certs:/certs \ -v/root/auth:/auth \-v /opt/docker-image:/var/lib/registry \-e STORAGE_PATH=/opt/docker-image \-e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/rep.itmuch.com.crt\-e REGISTRY_HTTP_TLS_KEY=/certs/rep.itmuch.com.key\ -e&quot;REGISTRY_AUTH=htpasswd&quot; \  -e&quot;REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm&quot; \  -eREGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \registry</span><br></pre></td></tr></table></figure>
<h1 id="host主机名"><a href="#host主机名" class="headerlink" title="host主机名"></a>host主机名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;192.168.137.8 rep.itmuch.com&apos;&gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>
<h1 id="登录私有库"><a href="#登录私有库" class="headerlink" title="登录私有库"></a>登录私有库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login rep.itmuch.com</span><br></pre></td></tr></table></figure>
<p>push或pull需要登录否则不能报错</p>
<h1 id="push到私有库"><a href="#push到私有库" class="headerlink" title="push到私有库"></a>push到私有库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker tag alpine rep.itmuch.com/alpine</span><br><span class="line"></span><br><span class="line">docker push rep.itmuch.com/alpine</span><br></pre></td></tr></table></figure>
<h1 id="查看镜像目录"><a href="#查看镜像目录" class="headerlink" title="查看镜像目录"></a>查看镜像目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rep.itmuch.com/v2/_catalog</span><br></pre></td></tr></table></figure>
<h1 id="查看镜像-版本列表"><a href="#查看镜像-版本列表" class="headerlink" title="查看镜像 版本列表"></a>查看镜像 版本列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rep.itmuch.com/v2/alpine/tags/list</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;/2018/05/08/（四）安装docker（root用户）/&quot;&gt;安装docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;创建使用仓库，并设置https 及安全访问&lt;/p&gt;
&lt;h1 id=&quot;1下载镜像&quot;&gt;&lt;a href=&quot;#1下载镜像&quot; class=&quot;he
    
    </summary>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>（五）更新docker 版本（root用户）</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%EF%BC%89%E6%9B%B4%E6%96%B0docker-%E7%89%88%E6%9C%AC%EF%BC%88root%E7%94%A8%E6%88%B7%EF%BC%89/"/>
    <id>https://smallwenzi.github.io/2018/05/08/）更新docker-版本（root用户）/</id>
    <published>2018-05-08T09:00:00.000Z</published>
    <updated>2019-05-06T06:03:39.216Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="/2018/05/08/（四）安装docker（root用户）/">安装docker 操作</a></p>
<h1 id="1-删除旧版本（以下操作都是使用root用户）"><a href="#1-删除旧版本（以下操作都是使用root用户）" class="headerlink" title="1 删除旧版本（以下操作都是使用root用户）"></a>1 删除旧版本（以下操作都是使用root用户）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line"></span><br><span class="line">docker-client \</span><br><span class="line"></span><br><span class="line">docker-client-latest\ </span><br><span class="line"></span><br><span class="line">docker-common \</span><br><span class="line"></span><br><span class="line">docker-latest \</span><br><span class="line"></span><br><span class="line">docker-latest-logrotate \</span><br><span class="line"></span><br><span class="line">docker-logrotate \</span><br><span class="line"></span><br><span class="line">docker-selinux \</span><br><span class="line"></span><br><span class="line">docker-engine-selinux \</span><br><span class="line"></span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure>
<h1 id="2-确保docker-ce-edge最新版本"><a href="#2-确保docker-ce-edge最新版本" class="headerlink" title="2 确保docker-ce-edge最新版本"></a>2 确保docker-ce-edge最新版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager--enable docker-ce-edge</span><br></pre></td></tr></table></figure>
<h1 id="3-安装docker"><a href="#3-安装docker" class="headerlink" title="3 安装docker"></a>3 安装docker</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce</span><br></pre></td></tr></table></figure>
<h1 id="4-设置集群功能"><a href="#4-设置集群功能" class="headerlink" title="4 设置集群功能"></a>4 设置集群功能</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/systemd/system/multi-user.target.wants/docker.service </span><br><span class="line">在</span><br><span class="line">ExecStart=/usr/bin/dockerd 添加 --experimental=true  表示启用集群功能</span><br></pre></td></tr></table></figure>
<h1 id="5-重新加载配置"><a href="#5-重新加载配置" class="headerlink" title="5 重新加载配置"></a>5 重新加载配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>
<h1 id="6-启动服务"><a href="#6-启动服务" class="headerlink" title="6 启动服务"></a>6 启动服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctemctl start docker</span><br></pre></td></tr></table></figure>
<h1 id="7-查看版本："><a href="#7-查看版本：" class="headerlink" title="7 查看版本："></a>7 查看版本：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;a href=&quot;/2018/05/08/（四）安装docker（root用户）/&quot;&gt;安装docker 操作&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-删除旧版本（以下操作都是使用root用户）&quot;&gt;&lt;a href=&quot;#1-删除旧版本（以下操作都是使用root用户）&quot; cla
    
    </summary>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>（四）安装docker（root用户）</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%EF%BC%88%E5%9B%9B%EF%BC%89%E5%AE%89%E8%A3%85docker%EF%BC%88root%E7%94%A8%E6%88%B7%EF%BC%89/"/>
    <id>https://smallwenzi.github.io/2018/05/08/（四）安装docker（root用户）/</id>
    <published>2018-05-08T07:59:00.000Z</published>
    <updated>2019-05-06T06:03:17.972Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<br><a href="/2018/05/08/）oracle-VM安装red-hat-liunx/">oracle VM安装red hat liunx</a></p>
<p><a href="/2018/05/08/）Red-Hat-升级-rpm软件、YUM软件（root用户）/">升级RPM和YUM 包</a></p>
<h1 id="1-安装docker（以下操作都是使用root用户）"><a href="#1-安装docker（以下操作都是使用root用户）" class="headerlink" title="1 安装docker（以下操作都是使用root用户）"></a>1 安装docker（以下操作都是使用root用户）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">--安装驱动（red-hat为例,不同操作系统，驱动不同详细看官网教程）</span><br><span class="line">&gt; yum install -y yum-utils device-mapper-persistent-data lvm2  </span><br><span class="line"></span><br><span class="line">--添加docker仓库</span><br><span class="line">&gt; yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">--清除缓存</span><br><span class="line">&gt; yum clean all</span><br><span class="line"></span><br><span class="line">--重新更新缓存</span><br><span class="line">&gt; yum makecache</span><br><span class="line"></span><br><span class="line">--确保docker engine最新</span><br><span class="line">&gt; yum-config-manager --enable docker-ce-edge</span><br><span class="line"></span><br><span class="line">--安装docker</span><br><span class="line">&gt; yum install docker-ce</span><br><span class="line"></span><br><span class="line">开机启动</span><br><span class="line">&gt; systemctl enable docker</span><br><span class="line"></span><br><span class="line">开启集群权限</span><br><span class="line">&gt;vi /etc/systemd/system/multi-user.target.wants/docker.service </span><br><span class="line">在</span><br><span class="line">ExecStart=/usr/bin/dockerd </span><br><span class="line">添加</span><br><span class="line">--experimental=true </span><br><span class="line"></span><br><span class="line">重新加载配置</span><br><span class="line">&gt;systemctl daemon-reload </span><br><span class="line"></span><br><span class="line"> --启动docker</span><br><span class="line">&gt;systemctl start docker</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">docker官网</a></p>
<p>docker 常用命令 参考<a href="https://docs.docker.com/engine/reference/run/" target="_blank" rel="noopener">docker 命令官网</a></p>
<h1 id="2-查看docker-版本"><a href="#2-查看docker-版本" class="headerlink" title="2 查看docker 版本"></a>2 查看docker 版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version --目前最新版本是 17.12.1-ce</span><br></pre></td></tr></table></figure>
<h1 id="3-查看docker-信息"><a href="#3-查看docker-信息" class="headerlink" title="3 查看docker 信息"></a>3 查看docker 信息</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure>
<h1 id="4-运行镜像"><a href="#4-运行镜像" class="headerlink" title="4 运行镜像"></a>4 运行镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-word --本地没有会找镜像库</span><br></pre></td></tr></table></figure>
<p>关于run 一些参数详细参考<a href="https://docs.docker.com/engine/reference/run/" target="_blank" rel="noopener">docker官网</a></p>
<h1 id="5-下载镜像"><a href="#5-下载镜像" class="headerlink" title="5 下载镜像"></a>5 下载镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull alpine</span><br></pre></td></tr></table></figure>
<h1 id="6-制作java环境镜像："><a href="#6-制作java环境镜像：" class="headerlink" title="6 制作java环境镜像："></a>6 制作java环境镜像：</h1><p>使用DockerFile 进行编写 ,参考<a href="https://docs.docker.com/engine/reference/builder/#usage" target="_blank" rel="noopener">dockerFile官网</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FROM alpine</span><br><span class="line">MAINTAINER killko &lt;killko@qq.com&gt;</span><br><span class="line">ENV TIME_ZONE Asiz/Shanghai</span><br><span class="line">RUN echo &apos;@edge http://nl.alpinelinux.org/alpine/edge/main&apos; &gt;&gt; /etc/apk/repositories &amp;&amp; \</span><br><span class="line">    echo &apos;@community http://nl.alpinelinux.org/alpine/edge/community&apos; &gt;&gt; /etc/apk/repositories &amp;&amp; \</span><br><span class="line">    apk update &amp;&amp; \</span><br><span class="line">    apk upgrade &amp;&amp; \</span><br><span class="line">    apk add ca-certificates openjdk8-jre-base@community &amp;&amp; \</span><br><span class="line">    apk del ca-certificates &amp;&amp; \</span><br><span class="line">    apk add --no-cache tzdata &amp;&amp; \</span><br><span class="line">    echo &quot;$&#123;TIME_ZONE&#125;&quot; &gt; /etc/timezone &amp;&amp; \</span><br><span class="line">    ln -sf /usr/share/zoneinfo/$&#123;TIME_ZONE&#125; /etc/localtime &amp;&amp; \</span><br><span class="line">    rm -rf /tmp/* /var/cache/apk/*</span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br></pre></td></tr></table></figure>
<p>编写完成进行build<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;docker build  -t openjre:latest . --表示在当前目录进行制作镜像</span><br><span class="line">&gt;docker images --查看镜像</span><br><span class="line">&gt;docker run -it openjre sh --进行查看java是否安装成功</span><br></pre></td></tr></table></figure></p>
<h1 id="7-导入镜像"><a href="#7-导入镜像" class="headerlink" title="7 导入镜像"></a>7 导入镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load &lt; openjre.tar</span><br></pre></td></tr></table></figure>
<h1 id="8-导出镜像："><a href="#8-导出镜像：" class="headerlink" title="8 导出镜像："></a>8 导出镜像：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save openjre:latest  openjre.tar</span><br></pre></td></tr></table></figure>
<h1 id="9-查看镜像"><a href="#9-查看镜像" class="headerlink" title="9 查看镜像"></a>9 查看镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
<h1 id="10-查看正在运行容器"><a href="#10-查看正在运行容器" class="headerlink" title="10 查看正在运行容器"></a>10 查看正在运行容器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a --查看容器id 运行状态 映射端口</span><br></pre></td></tr></table></figure>
<h1 id="11-查看容器日志"><a href="#11-查看容器日志" class="headerlink" title="11 查看容器日志"></a>11 查看容器日志</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f 容器id --容器id从docker ps -a获取</span><br></pre></td></tr></table></figure>
<h1 id="12-停止容器"><a href="#12-停止容器" class="headerlink" title="12 停止容器"></a>12 停止容器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器id ----容器id从docker ps -a获取</span><br></pre></td></tr></table></figure>
<h1 id="13-删除容器"><a href="#13-删除容器" class="headerlink" title="13 删除容器"></a>13 删除容器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id --容器id从docker ps -a获取</span><br></pre></td></tr></table></figure>
<h1 id="14-删除镜像"><a href="#14-删除镜像" class="headerlink" title="14 删除镜像"></a>14 删除镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi imagename:tag --imagename:tag imagename表示镜像名称 tag表示版本 这些信息可以从docker images进行获取</span><br></pre></td></tr></table></figure>
<h1 id="15-进入容器-运行sh命令："><a href="#15-进入容器-运行sh命令：" class="headerlink" title="15 进入容器 运行sh命令："></a>15 进入容器 运行sh命令：</h1><p>docker exec -it 容器id sh –容器id从docker ps -a获取</p>
<h1 id="16-添加普通用户操作docker"><a href="#16-添加普通用户操作docker" class="headerlink" title="16 添加普通用户操作docker"></a>16 添加普通用户操作docker</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi etc/systemd/system/multi-user.target.wants/docker.service （操作服务）</span><br><span class="line"></span><br><span class="line">ExecStart=/usr/bin/dockerd -G jenkins  #表示jenkins用户组可以操作docker命令</span><br><span class="line"></span><br><span class="line">保存后</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload --重新加载服务</span><br><span class="line"></span><br><span class="line">systemctl restart docker --重启服务</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;链接：&lt;br&gt;&lt;a href=&quot;/2018/05/08/）oracle-VM安装red-hat-liunx/&quot;&gt;oracle VM安装red hat liunx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2018/05/08/）Red-Hat-升级-rpm软件、YUM软件（
    
    </summary>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
  </entry>
  
</feed>
