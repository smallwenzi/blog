<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wen blog</title>
  <subtitle>tanyanwen的技术分享</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://smallwenzi.github.io/"/>
  <updated>2019-05-06T03:17:25.926Z</updated>
  <id>https://smallwenzi.github.io/</id>
  
  <author>
    <name>wen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>底层代码构造sql忽略NUll条件</title>
    <link href="https://smallwenzi.github.io/2019/05/06/A%E9%97%AE%E9%A2%98/"/>
    <id>https://smallwenzi.github.io/2019/05/06/A问题/</id>
    <published>2019-05-06T03:00:00.000Z</published>
    <updated>2019-05-06T03:17:25.926Z</updated>
    
    <content type="html"><![CDATA[<p>代码没有判断查询的值null，导致把全部数据load内存里，这样系统崩溃</p>
<p>代码：com.amway.common.jpa.repository.JpaRepoUtil<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">private static StringBuilder generateQlForQueryByProperties(Map&lt;String, Object&gt; propertiesMap,</span><br><span class="line">		StringBuilder ql, Map&lt;Integer, Object&gt; params, FindByPropertiesType findType) &#123;</span><br><span class="line">	int index = 0;</span><br><span class="line">	</span><br><span class="line">	if (propertiesMap != null &amp;&amp; !propertiesMap.isEmpty()) &#123;</span><br><span class="line">		boolean doDeleteAnd = false, doDeletewWere = true;</span><br><span class="line">		ql.append(&quot; where &quot;);</span><br><span class="line">        for (Entry&lt;String,Object&gt; entry: propertiesMap.entrySet()) &#123;</span><br><span class="line">        	Object value = entry.getValue();</span><br><span class="line">               //忽略null 的值</span><br><span class="line">        	if (value != null) &#123;</span><br><span class="line">        		if (doDeletewWere) </span><br><span class="line">        			doDeletewWere = false;</span><br><span class="line">        		</span><br><span class="line">        		if (value instanceof String &amp;&amp; (findType == null || FindByPropertiesType.Fuzzy.equals(findType))) &#123;</span><br><span class="line">        			String valueStr = (String) entry.getValue();</span><br><span class="line">        			ql.append(&quot;upper(model.&quot; + entry.getKey() + &quot;) like :propertyValue&quot; + index + &quot; and &quot;);</span><br><span class="line">        			params.put(index++, &quot;%&quot; + valueStr.trim().toUpperCase() + &quot;%&quot;);</span><br><span class="line">        		&#125; else if(QueryValue.NULL.equals(value)) &#123;</span><br><span class="line">        			ql.append(&quot;model.&quot; + entry.getKey() + &quot; is null and &quot;);</span><br><span class="line">        		&#125; else if(QueryValue.NotNull.equals(value)) &#123;</span><br><span class="line">        			ql.append(&quot;model.&quot; + entry.getKey() + &quot; is not null and &quot;);</span><br><span class="line">        		&#125; else &#123;</span><br><span class="line">        			ql.append(&quot;model.&quot; + entry.getKey() + &quot;=:propertyValue&quot; + index + &quot; and &quot;);</span><br><span class="line">        			params.put(index++, entry.getValue());</span><br><span class="line">        		&#125;</span><br><span class="line">        		</span><br><span class="line">        		doDeleteAnd = true;</span><br><span class="line">        	&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (doDeleteAnd)</span><br><span class="line">        	ql = ql.delete(ql.toString().lastIndexOf(&quot; and &quot;), ql.toString().length());</span><br><span class="line">        if (doDeletewWere)</span><br><span class="line">       		ql = ql.delete(ql.toString().lastIndexOf(&quot; where &quot;), ql.toString().length());</span><br><span class="line">	&#125;</span><br><span class="line">	return ql;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/2019/05/06/A问题/1.png" alt="upload successful"></p>
<p>总结：需要深度了解底层代码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码没有判断查询的值null，导致把全部数据load内存里，这样系统崩溃&lt;/p&gt;
&lt;p&gt;代码：com.amway.common.jpa.repository.JpaRepoUtil&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;
    
    </summary>
    
    
      <category term="jpa" scheme="https://smallwenzi.github.io/tags/jpa/"/>
    
  </entry>
  
  <entry>
    <title>在windows下atom上搭建PlantUML书写环境</title>
    <link href="https://smallwenzi.github.io/2018/10/14/windows%E4%B8%8Batom%E4%B8%8A%E6%90%AD%E5%BB%BAPlantUML%E4%B9%A6%E5%86%99%E7%8E%AF%E5%A2%83/"/>
    <id>https://smallwenzi.github.io/2018/10/14/windows下atom上搭建PlantUML书写环境/</id>
    <published>2018-10-14T07:36:00.000Z</published>
    <updated>2018-10-14T07:52:24.276Z</updated>
    
    <content type="html"><![CDATA[<p>PlantUML是一款使用纯文本绘制UML图的开源软件。它的优点是能够帮助作者把精力集中到内容的书写上而不是格式的调整。本文介绍了一种在windows环境下atom编辑器上搭建PlantUML书写环境的方法。</p>
<h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><ul>
<li>atom</li>
<li>graphviz<br><a href="http://www.graphviz.org/" target="_blank" rel="noopener">Graphviz</a>是一款开源图形可视化软件。Atom的PlantUML插件使用graphviz将PlantUML语言绘制成相应的图形。<h1 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h1>github上已经有开发者为atom开发了PlantUML相关的插件。这里推荐以下两个插件</li>
<li>language-plantuml</li>
<li>plantuml-viewer<br>其中language-plantuml提供了PlantUML语法高亮支持，plantuml-viewer负责把PlantUML语句转化为对应的UML图。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">有很多博客使用plantuml-preview。本人试用了这两款插件，发现都能很好的支持PlantUML。</span><br><span class="line">但是plantuml-viewer更有优势：plantuml-viewer能够实时显示PlantUML语言描述的图形，</span><br><span class="line">并且可以通过鼠标滚轮流畅的调节图形大小。此外，plantuml-preview需要显式的配置java和plantuml.jar，</span><br><span class="line">而plantuml-viewer不需要，因此我推荐plantuml-viewer</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>安装方法很简单：atom下 File -&gt; Settings -&gt; Install<br><img src="/2018/10/14/windows下atom上搭建PlantUML书写环境/plantuml_plugin.png" alt="logo"></p>
<h1 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h1><p>plantuml-viewer按如下配置<br><img src="/2018/10/14/windows下atom上搭建PlantUML书写环境/plantuml_viewer_setting.png" alt="logo"></p>
<ul>
<li>Charset配置成utf-8在生成图形的时候中文不会乱码</li>
<li>graphviz从官网下载后安装到自定义位置，在plant-viewer中指定dot.exe路径</li>
</ul>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>用PlantUML生成工厂模式UML<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@startuml</span><br><span class="line">skinparam classAttributeIconSize 0</span><br><span class="line">class Product</span><br><span class="line">class ConcreteProduct</span><br><span class="line">class Creator &#123;</span><br><span class="line">  + &#123;abstract&#125; FactoryMethod()</span><br><span class="line">&#125;</span><br><span class="line">class ConcreteCreator &#123;</span><br><span class="line">  + FactoryMethod()</span><br><span class="line">&#125;</span><br><span class="line">Product &lt;|-- ConcreteProduct</span><br><span class="line">Creator &lt;|-- ConcreteCreator</span><br><span class="line">ConcreteProduct &lt;.l. ConcreteCreator</span><br><span class="line">note left of Product: 定义工厂方法所创建的对象的接口</span><br><span class="line">note right of Creator: 声明工厂方法，该方法返回一个Product类型的对象</span><br><span class="line">note left of ConcreteProduct: 具体产品，实现了Product的接口</span><br><span class="line">note right of ConcreteCreator: 重定义工厂方法以返回一个ConcreteProduct实例</span><br><span class="line">@enduml</span><br></pre></td></tr></table></figure></p>
<p>效果图<br><img src="/2018/10/14/windows下atom上搭建PlantUML书写环境/3.png" alt="logo"></p>
<p><a href="http://plantuml.com/" target="_blank" rel="noopener">plantuml语法</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PlantUML是一款使用纯文本绘制UML图的开源软件。它的优点是能够帮助作者把精力集中到内容的书写上而不是格式的调整。本文介绍了一种在windows环境下atom编辑器上搭建PlantUML书写环境的方法。&lt;/p&gt;
&lt;h1 id=&quot;工具准备&quot;&gt;&lt;a href=&quot;#工具准备
    
    </summary>
    
      <category term="atom" scheme="https://smallwenzi.github.io/categories/atom/"/>
    
    
      <category term="plantuml" scheme="https://smallwenzi.github.io/tags/plantuml/"/>
    
      <category term="atom" scheme="https://smallwenzi.github.io/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>Solr的主从模式Master-Slave</title>
    <link href="https://smallwenzi.github.io/2018/10/14/olr%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%A8%A1%E5%BC%8FMaster-Slave/"/>
    <id>https://smallwenzi.github.io/2018/10/14/olr的主从模式Master-Slave/</id>
    <published>2018-10-14T07:25:00.000Z</published>
    <updated>2018-10-14T07:33:13.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要："><a href="#摘要：" class="headerlink" title="摘要："></a>摘要：</h1><p>如今，为了提高Solr的搜索速度，使其具有很好的容灾能力，往往会配置SolrCloud，但在Solr4之前，还有一种很流行的方式，Master-Slave模式，为什么要提及这种方式，因为我们公司目前用的就是这种方式。</p>
<h1 id="引入Master-Slave"><a href="#引入Master-Slave" class="headerlink" title="引入Master-Slave"></a>引入Master-Slave</h1><p>Solr在查询的时候，特别忌讳进行写操作，因为它是IO阻塞型的。现在的流行的Elasticsearch就对此有很好的改进。在引入Master-Slave以后，将读写分配到不同的服务器上，你可以使用master来做索引，然后使用slaves来做查询。<br>1.在多台服务器上分别搭建好可以独立运行的Solr，参见<a href="https://smallwenzi.github.io/2018/10/13/lr%E6%95%99%E7%A8%8B/">这里</a><br>2.指定其中的一台为Master，只需要在SolrConifg.xml中配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;requestHandler name=&quot;/replication&quot; class=&quot;solr.ReplicationHandler&quot;&gt;</span><br><span class="line">     &lt;lst name=&quot;master&quot;&gt;</span><br><span class="line">         &lt;str name=&quot;enable&quot;&gt;$&#123;enable.master:true&#125;&lt;/str&gt;</span><br><span class="line">         &lt;!--</span><br><span class="line">             Create a backup after &apos;optimize&apos;. Other values can be &apos;commit&apos;, &apos;startup&apos;.</span><br><span class="line">             It is possible to have multiple entries of this config string.</span><br><span class="line">             Note that this is just for backup, replication does not require this.</span><br><span class="line">         --&gt;</span><br><span class="line">         &lt;str name=&quot;backupAfter&quot;&gt;optimize&lt;/str&gt;</span><br><span class="line">         &lt;!-- Replicate on &apos;commit&apos;. &apos;startup&apos; and &apos;optimize&apos; are also the valid values for replicateAfter. --&gt;</span><br><span class="line">         &lt;str name=&quot;replicateAfter&quot;&gt;commit&lt;/str&gt;</span><br><span class="line">         &lt;!-- If configuration files need to be replicated give the names here, separated by comma --&gt;</span><br><span class="line">         &lt;str name=&quot;confFiles&quot;&gt;schema.xml,dict.txt,synonyms.txt&lt;/str&gt;</span><br><span class="line">         &lt;str name=&quot;commitReserveDuration&quot;&gt;00:00:10&lt;/str&gt;</span><br><span class="line">     &lt;/lst&gt;</span><br><span class="line">     &lt;int name=&quot;maxNumberOfBackups&quot;&gt;2&lt;/int&gt;</span><br><span class="line">        &lt;/requestHandler&gt;</span><br></pre></td></tr></table></figure></p>
<p>3.指定其他多有的服务为Slave，只需要分别SolrConifg.xml配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;requestHandler name=&quot;/replication&quot; class=&quot;solr.ReplicationHandler&quot; &gt;</span><br><span class="line">  &lt;lst name=&quot;slave&quot;&gt;</span><br><span class="line">      &lt;str name=&quot;enable&quot;&gt;$&#123;enable.slave:true&#125;&lt;/str&gt;</span><br><span class="line">      &lt;str name=&quot;masterUrl&quot;&gt;http://192.168.1.102:8983/solr/jcg&lt;/str&gt;</span><br><span class="line">      &lt;str name=&quot;pollInterval&quot;&gt;00:00:10&lt;/str&gt;</span><br><span class="line">      &lt;str name=&quot;httpConnTimeout&quot;&gt;5000&lt;/str&gt;</span><br><span class="line">      &lt;str name=&quot;httpReadTimeout&quot;&gt;10000&lt;/str&gt;</span><br><span class="line">   &lt;/lst&gt;</span><br><span class="line">&lt;/requestHandler&gt;</span><br></pre></td></tr></table></figure></p>
<p>4.重启所有的master-slave服务即可</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;摘要：&quot;&gt;&lt;a href=&quot;#摘要：&quot; class=&quot;headerlink&quot; title=&quot;摘要：&quot;&gt;&lt;/a&gt;摘要：&lt;/h1&gt;&lt;p&gt;如今，为了提高Solr的搜索速度，使其具有很好的容灾能力，往往会配置SolrCloud，但在Solr4之前，还有一种很流行的方式，M
    
    </summary>
    
      <category term="solr" scheme="https://smallwenzi.github.io/categories/solr/"/>
    
    
      <category term="solr" scheme="https://smallwenzi.github.io/tags/solr/"/>
    
      <category term="solr-master" scheme="https://smallwenzi.github.io/tags/solr-master/"/>
    
      <category term="solr-slave" scheme="https://smallwenzi.github.io/tags/solr-slave/"/>
    
  </entry>
  
  <entry>
    <title>solr教程</title>
    <link href="https://smallwenzi.github.io/2018/10/13/lr%E6%95%99%E7%A8%8B/"/>
    <id>https://smallwenzi.github.io/2018/10/13/lr教程/</id>
    <published>2018-10-13T05:50:00.000Z</published>
    <updated>2018-10-14T07:09:11.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-为什么选择Apache-Solr"><a href="#1-为什么选择Apache-Solr" class="headerlink" title="1.为什么选择Apache Solr"></a>1.为什么选择Apache Solr</h1><p>Apache Solr是一个功能强大的搜索服务器，它支持REST风格API。Solr是基于Lucene的，Lucene 支持强大的匹配能力，如短语，通配符，连接，分组和更多不同的数据类型。它使用 Apache Zookeeper特别针对高流量进行优化。Apache Solr提供各式各样的功能，我们列出了部分最主要的功能。</p>
<ul>
<li>先进的全文搜索功能。</li>
<li>XML，JSON和HTTP - 基于开放接口标准。</li>
<li>高度可扩展和容错。</li>
<li>同时支持模式和无模式配置。</li>
<li>分页搜索和过滤。</li>
<li>支持像英语，德语，中国，日本，法国和许多主要语言</li>
<li>丰富的文档分析。</li>
</ul>
<h1 id="安装solr"><a href="#安装solr" class="headerlink" title="安装solr"></a>安装solr</h1><p>要首先让从以下位置下载最新版本的Apache Solr：<br><a href="http://lucene.apache.org/solr/downloads.html" target="_blank" rel="noopener">http://lucene.apache.org/solr/downloads.html</a><br>在撰写本文时，可用的稳定版本是7.4.0。<br>一旦Solr的zip文件下载将它解压缩到一个文件夹。提取的文件夹看起来像下面。<br><img src="/2018/10/13/lr教程/1.png" alt="logo"><br>Solr的文件夹</p>
<p>bin文件夹中包含用来启动和停止服务器的脚本。example 文件夹包含几个示例文件。我们将使用其中的一种，以说明Solr如何索引数据。server 文件夹包含logs 文件夹，所有的Solr的日志都写入该文件夹。这将有助于索引过程来检查任何错误日志。在sever文件夹下的Solr文件夹包含不同的集合或核心（core/collection）。对于各集合或核心的配置和数据都存储在相应的集合或核心文件夹。<br>Apache Solr带有一个内置的Jetty服务器。但在我们开始之前，我们必须验证JAVA_HOME已经配置。<br>我们可以使用命令行脚本启动服务器。让我们去solr的bin目录，从命令提示符输入出以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solr start</span><br></pre></td></tr></table></figure></p>
<p>这将启动下的默认端口8983 Solr的服务器。</p>
<p>现在，我们可以在浏览器中打开以下网址和验证，我们的Solr的实例正在运行。solr的管理工具的细节超出了示例的范围。</p>
<p><a href="http://localhost:8983/Solr/" target="_blank" rel="noopener">http://localhost:8983/Solr/</a><br><img src="/2018/10/13/lr教程/2.png" alt="logo"></p>
<h1 id="配置Apache-Solr"><a href="#配置Apache-Solr" class="headerlink" title="配置Apache Solr"></a>配置Apache Solr</h1><p>在本节中，我们将告诉你如何配置的核心/集合作为Solr实例，以及如何定义的字段。Apache Solr附带称为无模式模式的选项。这个选项允许用户构建有效的架构，而无需手动编辑模式文件。但是，在这个例子中，我们将使用架构配置理解Solr的内部。</p>
<h2 id="建立核心（core）"><a href="#建立核心（core）" class="headerlink" title="建立核心（core）"></a>建立核心（core）</h2><p>当Solr的服务器在独立模式下启动的配置称为核心，当它在SolrCloud模式启动的配置称为集合。在这个例子中，我们将有关独立服务器和核心讨论。我们将在以后再讨论SolrCloud。首先，我们需要创建一个核心的索引数据。Solr的创建命令有以下选项：</p>
<p>-c <name> -要创建的核心或集合的名称（必需）。<br>-d <confdir> -配置目录，在SolrCloud模式非常有用。<br>-n <configname> -配置名称。这将默认为核心或集合的名称。<br>-p <port> -本地Solr的实例的端口发送create命令; 默认脚本试图通过寻找运行Solr的实例来检测端口。<br>-s <shards> -Number of shards to split a collection into, default is 1.<br>-rf <replicas> -集合中的每个文件的份数。默认值是1。<br>在这个例子中，我们将使用的核心名称和配置目录-d参数-c参数。对于所有其它参数我们使用默认设置。</replicas></shards></port></configname></confdir></name></p>
<p>现在在命令窗口浏览 solr-7.4.0\bin文件夹，并发出以下命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solr create -c jcg</span><br></pre></td></tr></table></figure></p>
<p>我们可以看到在命令窗口中下面的输出。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Creating new core &apos;jcg&apos; using command:</span><br><span class="line">http://localhost:8983/solr/admin/cores?action=CREATE&amp;name=jcg&amp;instanceDir=jcg</span><br><span class="line"> &#123;</span><br><span class="line"> &quot;responseHeader&quot;:&#123;</span><br><span class="line"> &quot;status&quot;:0,</span><br><span class="line"> &quot;QTime&quot;:663&#125;,</span><br><span class="line"> &quot;core&quot;:&quot;jcg&quot;&#125;</span><br><span class="line"> ``` </span><br><span class="line">现在我们导航到以下网址，我们可以看到JCG核心被填充在核心选择器上。还可以看到核心的统计信息。</span><br><span class="line">http://localhost:8983/Solr</span><br><span class="line">![logo](lr教程/3.png)</span><br><span class="line"></span><br><span class="line">## 修改Schema.xml文件</span><br><span class="line">我们需要修改schema.xml中文件的文件夹下，server\solr\jcg\conf包含的字段。我们将使用随Solr的安装索引附带的示例文件“books.csv”之一。该文件所在的文件夹下  的solr-7.4.0\example\exampledocs</span><br><span class="line"></span><br><span class="line">现在，我们定位到该文件夹  server\solr目录。你会看到一个名为JCG的文件夹被创建。子文件夹conf和data分别拥有核心的配置和索引的数据。</span><br><span class="line">现在编辑\server\solr\jcg\conf\server\solr\jcg\conf\schema.xml文件，设置唯一元素后添加以下内容。</span><br><span class="line">我们已经设置了属性索引为true。这指定字段用于索引和记录可以使用索引进行检索。该值设置为false将只存储领域，但不能进行查询。</span><br><span class="line">另外请注意另一个属性stored并将其设置为true。这指定字段被存储，并且可以在输出被返回。将此字段设置为假将使字段唯一索引，并且不能在输出进行检索。</span><br><span class="line">我们已经分配给存在于此处的“books.csv”文件中的字段的类型。在CSV文件“ID”第一场由索引Schema.xml文件的唯一键自动元素的照顾。如果你注意，我们已经略过字段series_t，sequence_i和genre_s未做任何条目。但是，当我们执行索引时，所有这些字段都被索引且没有任何问题。如果你想知道这种情况需要在Schema.xml文件的dynamicField部分一探究竟。</span><br><span class="line">[schema.xml](schema.xml)</span><br><span class="line"></span><br><span class="line">既然我们已经修改了配置，我们必须停止和启动服务器。要做到这一点，我们需要通过命令行发出从bin目录下面的命令。</span><br></pre></td></tr></table></figure></p>
<p>Solr  stop -all<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">服务器将停止现在。现在启动服务器问题从bin目录中通过命令行运行以下命令。</span><br></pre></td></tr></table></figure></p>
<p>Solr start<br>```</p>
<h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><p>Apache Solr带有一个叫做SimplePostTool独立的Java程序。这个程序被打包成JAR,在安装目录下 example\exampledocs可看到。<br>现在，我们在命令行定位到example\exampledocs文件夹，然后键入以下命令。你会看到一堆选项，使用的工具。<br><img src="/2018/10/13/lr教程/4.png" alt="logo"><br>正如我们前面所说，我们将索引“books.csv”文件中的数据。我们将导航到solr-7.4.0\example\exampledocs在命令提示符并发出以下命令。<br><img src="/2018/10/13/lr教程/5.png" alt="logo"><br>现在我们导航到以下网址并选择核心JCG。<br><a href="http://localhost:8983/solr" target="_blank" rel="noopener">http://localhost:8983/solr</a><br><img src="/2018/10/13/lr教程/6.png" alt="logo"><br>Solr的JCG核心数据<br>就拿在统计部分仔细一看，该民文档参数将显示索引的行数。</p>
<h1 id="访问索引的文档"><a href="#访问索引的文档" class="headerlink" title="访问索引的文档"></a>访问索引的文档</h1><p>Apache Solr提供了一种基于REST API来访问的数据，并还提供了不同的参数，以检索数据。我们将向您展示一些基于场景的查询。</p>
<h2 id="按名称搜索"><a href="#按名称搜索" class="headerlink" title="按名称搜索"></a>按名称搜索</h2><p>我们将用它的名字检索书的细节。要做到这一点，我们将使用下面的语法。URL中的参数“Q”是查询事件。<br>打开浏览器下列URL。<br><a href="http://localhost:8983/solr/jcg/select?q=name:&quot;A" target="_blank" rel="noopener">http://localhost:8983/solr/jcg/select?q=name:&quot;A</a> Clash of Kings”<br>输出将在下面，如图所示。<br><img src="/2018/10/13/lr教程/7.png" alt="logo"></p>
<h2 id="首字母搜索"><a href="#首字母搜索" class="headerlink" title="首字母搜索"></a>首字母搜索</h2><p>现在我们将告诉你如何搜索记录，如果我们只知道起始字母或单词，不记得完整的标题。我们可以用下面的查询检索结果。<br><a href="http://localhost:8983/solr/jcg/select?q=name:&quot;A" target="_blank" rel="noopener">http://localhost:8983/solr/jcg/select?q=name:&quot;A</a>“<br>输出将列出所有的书籍字母A盯着<br><img src="/2018/10/13/lr教程/8.png" alt="logo"></p>
<h2 id="搜索使用通配符"><a href="#搜索使用通配符" class="headerlink" title="搜索使用通配符"></a>搜索使用通配符</h2><p>Solr的支持通配符搜索。我们将下面的展示如何检索所有书名包含“of”的书。<br><a href="http://localhost:8983/solr/jcg/select?q=name:&quot;*of" target="_blank" rel="noopener">http://localhost:8983/solr/jcg/select?q=name:&quot;*of</a>“<br><img src="/2018/10/13/lr教程/9.png" alt="logo"></p>
<h2 id="搜索使用的条件"><a href="#搜索使用的条件" class="headerlink" title="搜索使用的条件"></a>搜索使用的条件</h2><p>Solr的支持条件的搜索。我们可以设置条件，我们的查询提供了“FQ”参数。在下面我们将告诉你如何查询价格低于￥6的书。<br><a href="http://localhost:8983/solr/jcg/select?q=*&amp;fq=price:[0" target="_blank" rel="noopener">http://localhost:8983/solr/jcg/select?q=*&amp;fq=price:[0</a> TO 6]<br>输出将只列出这是低于$ 6的书籍。<br><img src="/2018/10/13/lr教程/10.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-为什么选择Apache-Solr&quot;&gt;&lt;a href=&quot;#1-为什么选择Apache-Solr&quot; class=&quot;headerlink&quot; title=&quot;1.为什么选择Apache Solr&quot;&gt;&lt;/a&gt;1.为什么选择Apache Solr&lt;/h1&gt;&lt;p&gt;Apache
    
    </summary>
    
      <category term="solr" scheme="https://smallwenzi.github.io/categories/solr/"/>
    
    
      <category term="solr" scheme="https://smallwenzi.github.io/tags/solr/"/>
    
  </entry>
  
  <entry>
    <title>docker的使用</title>
    <link href="https://smallwenzi.github.io/2018/06/11/docker%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://smallwenzi.github.io/2018/06/11/docker的使用/</id>
    <published>2018-06-11T12:50:00.000Z</published>
    <updated>2018-10-13T05:35:19.099Z</updated>
    
    <content type="html"><![CDATA[<p>1 docker build出现Temporary failure resolving<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi/etc/systemd/system/multi-user.target.wants/docker.service ExecStart=/usr/bin/dockerd </span><br><span class="line">添加 --dns=8.8.8.8</span><br><span class="line">重新加载配置</span><br><span class="line">&gt;systemctl daemon-reload </span><br><span class="line"> --启动docker</span><br><span class="line">&gt;systemctl start docker</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1 docker build出现Temporary failure resolving&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s
    
    </summary>
    
      <category term="docker" scheme="https://smallwenzi.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>十二 jenkins 配置maven打包git代码</title>
    <link href="https://smallwenzi.github.io/2018/05/11/-jenkins-%E9%85%8D%E7%BD%AEmaven%E6%89%93%E5%8C%85git%E4%BB%A3%E7%A0%81/"/>
    <id>https://smallwenzi.github.io/2018/05/11/-jenkins-配置maven打包git代码/</id>
    <published>2018-05-11T15:36:00.000Z</published>
    <updated>2018-05-14T13:10:45.233Z</updated>
    
    <content type="html"><![CDATA[<p>一 <a href="/2018/05/11/-jenkins-配置git证书/">jenkins-配置git证书</a><br>二 <a href="/2018/05/08/安装jenkins/">安装jenkins</a><br>三 <a href="/2018/05/11/enkinx-配置任务/">jenkins 配置java和Maven环境</a></p>
<p><img src="/2018/05/11/-jenkins-配置maven打包git代码/总图.png" alt="logo"></p>
<h1 id="一配置任务"><a href="#一配置任务" class="headerlink" title="一配置任务"></a>一配置任务</h1><p>1.1点击 创建一个新任务<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/1.png" alt="logo"><br>1.2 输入名称  选择自由风格的软件项目<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/2.png" alt="logo"><br>1.3新增文本参数<br>1.3.1参数docker.image.prefix: 私有库域名<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/3.png" alt="logo"><br>1.3.2参数docker.registry：私有库地址<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/4.png" alt="logo"><br>1.3.3参数docker.servcerId：刚才maven配置 私有库用户名和密码<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/5.png" alt="logo"><br>1.3.4参数version<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/6.png" alt="logo"><br>1.4配置 git库<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/7.png" alt="logo"><br>1.5构建步骤添加 执行Shell脚本<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/8.png" alt="logo"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">脚本命令：</span><br><span class="line">echo $WORKSPACE</span><br><span class="line">echo $MAVEN_HOME</span><br><span class="line">cd $WORKSPACE/Eureka</span><br><span class="line">$MAVEN_HOME/bin/mvn clean package docker:build -DpushImage -Ddocker.image.prefix=$docker_image_prefix -Ddocker.registry=$docker_registry -Ddocker.servcerId=$docker_servcerId -Dtag.version=$version</span><br></pre></td></tr></table></figure></p>
<p>保存</p>
<h1 id="二-配置jenkins用户可以执行docker-命令"><a href="#二-配置jenkins用户可以执行docker-命令" class="headerlink" title="二 配置jenkins用户可以执行docker 命令"></a>二 配置jenkins用户可以执行docker 命令</h1><p>liunx用户 使用jenkins 用户启动jenkins<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/systemd/system/multi-user.target.wants/docker.service</span><br><span class="line"> ExecStart=/usr/bin/dockerd  -G jenkins</span><br></pre></td></tr></table></figure></p>
<p> -G表示 jenkins用户可以执行docker 命令<br> <img src="/2018/05/11/-jenkins-配置maven打包git代码/9.png" alt="logo"></p>
<p> 重新加载配置<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></p>
<p>  重新启动docker<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></p>
<h1 id="三执行任务"><a href="#三执行任务" class="headerlink" title="三执行任务"></a>三执行任务</h1><p>3.1 点击 Build with Parameters<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/10.png" alt="logo"><br>3.2 点击开始创建<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/11.png" alt="logo"><br>3.3查看脚本执行情况<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/12.png" alt="logo"><br>3.4成功后查看私有仓库目录<br><img src="/2018/05/11/-jenkins-配置maven打包git代码/132.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一 &lt;a href=&quot;/2018/05/11/-jenkins-配置git证书/&quot;&gt;jenkins-配置git证书&lt;/a&gt;&lt;br&gt;二 &lt;a href=&quot;/2018/05/08/安装jenkins/&quot;&gt;安装jenkins&lt;/a&gt;&lt;br&gt;三 &lt;a href=&quot;/2018/05/
    
    </summary>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/categories/jenkins/"/>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
      <category term="git" scheme="https://smallwenzi.github.io/tags/git/"/>
    
      <category term="maven" scheme="https://smallwenzi.github.io/tags/maven/"/>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>十一 jenkins 配置git证书</title>
    <link href="https://smallwenzi.github.io/2018/05/11/-jenkins-%E9%85%8D%E7%BD%AEgit%E8%AF%81%E4%B9%A6/"/>
    <id>https://smallwenzi.github.io/2018/05/11/-jenkins-配置git证书/</id>
    <published>2018-05-11T15:26:00.000Z</published>
    <updated>2018-05-11T15:38:51.977Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/2018/05/08/三）linux-安装-GIT（root用户）/">linux 安装 GIT（root用户）</a><br><a href="/2018/05/08/安装jenkins/">安装jenkins</a></p>
<h1 id="一-linux-生成RSA-key"><a href="#一-linux-生成RSA-key" class="headerlink" title="一 linux 生成RSA key"></a>一 linux 生成RSA key</h1><p>linux远程登录ssh ywtan@localhost<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure></p>
<p><img src="/2018/05/11/-jenkins-配置git证书/1.png" alt="logo"></p>
<p>全部回车<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat .ssh/id_rsa(这是刚才设置 rsa_key)</span><br></pre></td></tr></table></figure></p>
<h1 id="二-jenkins-配置git证书"><a href="#二-jenkins-配置git证书" class="headerlink" title="二 jenkins 配置git证书"></a>二 jenkins 配置git证书</h1><p>2.1 在jenkins 页面点击credentials<br><img src="/2018/05/11/-jenkins-配置git证书/2.png" alt="logo"><br>2.2 点击 system<br><img src="/2018/05/11/-jenkins-配置git证书/3.png" alt="logo"><br>2.3 点击 Global credentials (unrestricted)<br><img src="/2018/05/11/-jenkins-配置git证书/4.png" alt="logo"><br>2.4 add Credentials<br><img src="/2018/05/11/-jenkins-配置git证书/5.png" alt="logo"><br>2.5 如图所示填写， key是刚才生成的key，最后点击保存<br><img src="/2018/05/11/-jenkins-配置git证书/6.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;/2018/05/08/三）linux-安装-GIT（root用户）/&quot;&gt;linux 安装 GIT（root用户）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/2018/05/08/安装jenkins/&quot;&gt;安装jenkins&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;一-li
    
    </summary>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/categories/jenkins/"/>
    
    
      <category term="git" scheme="https://smallwenzi.github.io/tags/git/"/>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>十）jenkins 配置java和Maven环境</title>
    <link href="https://smallwenzi.github.io/2018/05/11/enkinx-%E9%85%8D%E7%BD%AE%E4%BB%BB%E5%8A%A1/"/>
    <id>https://smallwenzi.github.io/2018/05/11/enkinx-配置任务/</id>
    <published>2018-05-11T15:01:00.000Z</published>
    <updated>2018-05-11T15:27:28.001Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<br><a href="/2018/05/11/九-linux配置java和maven/">linux配置java和maven</a><br><a href="2018/05/08/（六）docker安装本地仓库（root用户）/">docker安装本地仓库</a><br><a href="/2018/05/08/安装jenkins/">安装jenkins</a></p>
<h1 id="一配置maven"><a href="#一配置maven" class="headerlink" title="一配置maven"></a>一配置maven</h1><p>/app/apache-maven-3.2.3/conf/settings.xml<br>库位置<br><img src="/2018/05/11/enkinx-配置任务/1.png" alt="logo"><br>以下是私有docker库 用户名密码）<br><img src="/2018/05/11/enkinx-配置任务/2.png" alt="logo"></p>
<h1 id="二-jenkins-配置java和Maven环境"><a href="#二-jenkins-配置java和Maven环境" class="headerlink" title="二 jenkins 配置java和Maven环境"></a>二 jenkins 配置java和Maven环境</h1><p>2.1点击系统管理<br><img src="/2018/05/11/enkinx-配置任务/11278290-aab55082195f5c56.png" alt="logo"><br>2.2 点击 全局工具配置<br><img src="/2018/05/11/enkinx-配置任务/3.png" alt="logo"><br>2.3 如下图配置 java和maven.<br><img src="/2018/05/11/enkinx-配置任务/4.png" alt="logo"></p>
<p><img src="/2018/05/11/enkinx-配置任务/5.png" alt="logo"><br>2.4 点击 保存 再次点击 系统设置<br><img src="/2018/05/11/enkinx-配置任务/6.png" alt="logo"><br>2.5 再次配置java和maven目录<br><img src="/2018/05/11/enkinx-配置任务/7.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;/2018/05/11/九-linux配置java和maven/&quot;&gt;linux配置java和maven&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;2018/05/08/（六）docker安装本地仓库（root用户）/&quot;&gt;docker安装本地仓库&lt;/a&gt;
    
    </summary>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/categories/jenkins/"/>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
      <category term="maven" scheme="https://smallwenzi.github.io/tags/maven/"/>
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/tags/jenkins/"/>
    
      <category term="java" scheme="https://smallwenzi.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>九 linux配置java和maven</title>
    <link href="https://smallwenzi.github.io/2018/05/11/%E4%B9%9D-linux%E9%85%8D%E7%BD%AEjava%E5%92%8Cmaven/"/>
    <id>https://smallwenzi.github.io/2018/05/11/九-linux配置java和maven/</id>
    <published>2018-05-11T14:46:00.000Z</published>
    <updated>2018-05-11T14:59:51.185Z</updated>
    
    <content type="html"><![CDATA[<p>安装链接：<br><a href="/2018/05/08/）oracle-VM安装red-hat-liunx/">oracle VM安装red hat liunx</a></p>
<h1 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h1><p>1 从<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a> 页面下载jdk-8u171-linux-x64.tar.gz<br>2 上传文件至linux服务器 /app<br>3 在/app目录 执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf jdk-8u171-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></p>
<h1 id="安装maven"><a href="#安装maven" class="headerlink" title="安装maven:"></a>安装maven:</h1><p>1 在linux里/app执行：wget <a href="https://archive.apache.org/dist/maven/maven-3/3.2.3/binaries/apache-maven-3.2.3-bin.tar.gz" target="_blank" rel="noopener">https://archive.apache.org/dist/maven/maven-3/3.2.3/binaries/apache-maven-3.2.3-bin.tar.gz</a><br>2 在/app目录 执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf  apache-maven-3.2.3-bin.tar.gz</span><br></pre></td></tr></table></figure></p>
<p>3 在/app/apache-maven-3.2.3/bin 目录执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./mvn</span><br></pre></td></tr></table></figure></p>
<h1 id="配置环境-root用户"><a href="#配置环境-root用户" class="headerlink" title="配置环境(root用户)"></a>配置环境(root用户)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure>
<p>配置maven 和java环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME=/app/apache-maven-3.2.3</span><br><span class="line">export MAVEN_HOME</span><br><span class="line">export PATH=$PATH:$MAVEN_HOME/bin</span><br><span class="line">export JAVA_HOME=/app/jdk1.8.0_171</span><br><span class="line">export JAVA_HOME</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure></p>
<p>保存完成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -v</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装链接：&lt;br&gt;&lt;a href=&quot;/2018/05/08/）oracle-VM安装red-hat-liunx/&quot;&gt;oracle VM安装red hat liunx&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;安装java&quot;&gt;&lt;a href=&quot;#安装java&quot; class=&quot;heade
    
    </summary>
    
      <category term="linux" scheme="https://smallwenzi.github.io/categories/linux/"/>
    
    
      <category term="maven" scheme="https://smallwenzi.github.io/tags/maven/"/>
    
      <category term="java" scheme="https://smallwenzi.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>八）安装jenkins</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%E5%AE%89%E8%A3%85jenkins/"/>
    <id>https://smallwenzi.github.io/2018/05/08/安装jenkins/</id>
    <published>2018-05-08T10:03:00.000Z</published>
    <updated>2018-05-08T10:14:48.416Z</updated>
    
    <content type="html"><![CDATA[<p>参考：</p>
<p>1<a href="/2018/05/08/）oracle-VM安装red-hat-liunx/">oracle VM安装red hat liunx</a></p>
<p>2<a href="/2018/05/08/）Red-Hat-升级-rpm软件、YUM软件（root用户）/">升级RPM和YUM 包</a></p>
<h1 id="1-安装java环境"><a href="#1-安装java环境" class="headerlink" title="1 安装java环境"></a>1 安装java环境</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y java</span><br></pre></td></tr></table></figure>
<h1 id="2-安装wget"><a href="#2-安装wget" class="headerlink" title="2 安装wget"></a>2 安装wget</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget</span><br></pre></td></tr></table></figure>
<h1 id="3-获取jenkins的配置"><a href="#3-获取jenkins的配置" class="headerlink" title="3 获取jenkins的配置"></a>3 获取jenkins的配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat/jenkins.repo</span><br></pre></td></tr></table></figure>
<h1 id="4-导入jenkinskey"><a href="#4-导入jenkinskey" class="headerlink" title="4 导入jenkinskey"></a>4 导入jenkinskey</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> rpm --import http://pkg.jenkins.io/redhat/jenkins.io.key</span><br><span class="line"> ``</span><br><span class="line"></span><br><span class="line"># 5 安装jenkins</span><br></pre></td></tr></table></figure>
<p>yum install jenkins<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 6 jenkins的配置文件：</span><br></pre></td></tr></table></figure></p>
<p>/etc/sysconfig/jenkins<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 7 运行 jenkins</span><br></pre></td></tr></table></figure></p>
<p>service jenkins start<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 8 查看日志：</span><br></pre></td></tr></table></figure></p>
<p>tail-f  /var/log/jenkins/jenkins.log<br>```<br><img src="/2018/05/08/安装jenkins/11278290-b7f1229f3c16a906.png" alt="logo"><br>211是jenkins key</p>
<p>如果不能访问请关闭防火墙<br>iptables -F</p>
<h1 id="9-浏览器访问：192-168-137-8：8080"><a href="#9-浏览器访问：192-168-137-8：8080" class="headerlink" title="9 浏览器访问：192.168.137.8：8080"></a>9 浏览器访问：192.168.137.8：8080</h1><p><img src="/2018/05/08/安装jenkins/11278290-e2f6e1054f7f923a.png" alt="logo"><br>输入21120240a2cb4e8e83065dc7c71a5b88<br>点击确定</p>
<h1 id="10-安装推荐的插件"><a href="#10-安装推荐的插件" class="headerlink" title="10 安装推荐的插件"></a>10 安装推荐的插件</h1><p><img src="/2018/05/08/安装jenkins/11278290-9e1548cc032d002c.png" alt="logo"></p>
<h1 id="11-等等安装完成"><a href="#11-等等安装完成" class="headerlink" title="11  等等安装完成"></a>11  等等安装完成</h1><p><img src="/2018/05/08/安装jenkins/11278290-a2000d90816960d4.png" alt="logo"><br>12 创建用户:  输入完信息 点击 确定：<br><img src="/2018/05/08/安装jenkins/11278290-364c455c39845e06.png" alt="logo"><br>13 点击save and finish</p>
<p><img src="/2018/05/08/安装jenkins/11278290-6cce522c3a59044b.png" alt="logo"><br>14 安装成功<br><img src="/2018/05/08/安装jenkins/11278290-aab55082195f5c56.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;1&lt;a href=&quot;/2018/05/08/）oracle-VM安装red-hat-liunx/&quot;&gt;oracle VM安装red hat liunx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2&lt;a href=&quot;/2018/05/08/）Red-Hat-升级-rpm软件、
    
    </summary>
    
    
      <category term="jenkins" scheme="https://smallwenzi.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>spring cloud+docker+git+maven+jenkins+Kubernetes 目录</title>
    <link href="https://smallwenzi.github.io/2018/05/08/ring-cloud-docker-git-maven-jenkins-Kubernetes-%E7%9B%AE%E5%BD%95/"/>
    <id>https://smallwenzi.github.io/2018/05/08/ring-cloud-docker-git-maven-jenkins-Kubernetes-目录/</id>
    <published>2018-05-08T09:45:58.000Z</published>
    <updated>2018-05-08T09:57:40.039Z</updated>
    
    <content type="html"><![CDATA[<p>图：<br><img src="/2018/05/08/ring-cloud-docker-git-maven-jenkins-Kubernetes-目录/11278290-faac5fbb39c76314.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;图：&lt;br&gt;&lt;img src=&quot;/2018/05/08/ring-cloud-docker-git-maven-jenkins-Kubernetes-目录/11278290-faac5fbb39c76314.png&quot; alt=&quot;logo&quot;&gt;&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>七）maven build docker and push Image</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%E4%B8%83%EF%BC%89maven-build-docker-and-push-Image/"/>
    <id>https://smallwenzi.github.io/2018/05/08/七）maven-build-docker-and-push-Image/</id>
    <published>2018-05-08T09:36:00.000Z</published>
    <updated>2018-05-08T09:42:04.873Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<a href="/2018/05/08/（六）docker安装本地仓库（root用户）/">docker安装本地仓库</a><br>使用maven 打包jar成docker镜像 并发布到镜像库</p>
<h1 id="1-maven-settings-xml配置server-节点添加"><a href="#1-maven-settings-xml配置server-节点添加" class="headerlink" title="1 maven settings.xml配置server 节点添加"></a>1 maven settings.xml配置server 节点添加</h1><p>（这是私有库 用户名密码）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;server&gt;</span><br><span class="line">		&lt;id&gt;docker-hub&lt;/id&gt;</span><br><span class="line">		&lt;username&gt;testuser&lt;/username&gt;</span><br><span class="line">		&lt;password&gt;testpassword&lt;/password&gt;</span><br><span class="line">      &lt;/server&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="2-项目-pom-xml"><a href="#2-项目-pom-xml" class="headerlink" title="2 项目 pom.xml"></a>2 项目 pom.xml</h1><p>properties 节点</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;docker.image.prefix&gt;reg.itmuch.com&lt;/docker.image.prefix&gt;</span><br><span class="line">&lt;docker.registry&gt;https://reg.itmuch.com/v1&lt;/docker.registry&gt;</span><br><span class="line">   &lt;tag.version&gt;1.0.0&lt;/tag.version&gt;</span><br><span class="line">    &lt;docker.servcerId&gt;docker-hub&lt;/docker.servcerId&gt;</span><br></pre></td></tr></table></figure>
<p>maven 配置组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    &lt;!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin --&gt;</span><br><span class="line">       &lt;plugin&gt;</span><br><span class="line">           &lt;groupId&gt;com.spotify&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class="line">           &lt;dependencies&gt;</span><br><span class="line">           &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-logging&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">           &lt;/dependencies&gt;</span><br><span class="line">           &lt;configuration&gt;</span><br><span class="line">              	&lt;!-- 镜像名:tag  --&gt;</span><br><span class="line">              &lt;imageName&gt;$&#123;docker.image.prefix&#125;/$&#123;project.artifactId&#125;:$&#123;tag.version&#125;&lt;/imageName&gt;</span><br><span class="line">   &lt;!-- 指定Dockerfile所在的路径  --&gt;</span><br><span class="line">               &lt;dockerDirectory&gt;$&#123;project.basedir&#125;/docker&lt;/dockerDirectory&gt;</span><br><span class="line">               &lt;!-- 以下两行是为了docker push到DockerHub使用的。 --&gt;</span><br><span class="line">               &lt;serverId&gt;$&#123;docker.servcerId&#125;&lt;/serverId&gt;</span><br><span class="line">               &lt;registryUrl&gt;$&#123;docker.registry&#125;&lt;/registryUrl&gt;</span><br><span class="line">   			   &lt;resources&gt;</span><br><span class="line">                   &lt;resource&gt;</span><br><span class="line">                       &lt;targetPath&gt;/&lt;/targetPath&gt;</span><br><span class="line">                       &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;</span><br><span class="line">                       &lt;include&gt;$&#123;project.build.finalName&#125;.jar&lt;/include&gt;</span><br><span class="line">                   &lt;/resource&gt;</span><br><span class="line">               &lt;/resources&gt;</span><br><span class="line">           &lt;/configuration&gt;</span><br><span class="line">       &lt;/plugin&gt;</span><br></pre></td></tr></table></figure></p>
<p>参考<a href="https://github.com/spotify/docker-maven-plugin" target="_blank" rel="noopener">https://github.com/spotify/docker-maven-plugin</a></p>
<h1 id="3-dockerFile文件放在项目根目录下docker目录"><a href="#3-dockerFile文件放在项目根目录下docker目录" class="headerlink" title="3 dockerFile文件放在项目根目录下docker目录"></a>3 dockerFile文件放在项目根目录下docker目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">FROM openjre</span><br><span class="line">MAINTAINER killko &lt;ydhana@isoftstone.com&gt;</span><br><span class="line">ENV EUREKA_INSTANCE_NAME=eureka</span><br><span class="line">ENV EUREKA_SERVICEURL=http://eureka:6080/eureka</span><br><span class="line">EXPOSE 6080</span><br><span class="line">#统一时区</span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br><span class="line"></span><br><span class="line">COPY eureka*.jar /Eureka.jar</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;-Djava.net.preferIPv4Stack=true&quot;,&quot;/Eureka.jar&quot;]</span><br></pre></td></tr></table></figure>
<h1 id="4-maven-build-docker-and-push-Image："><a href="#4-maven-build-docker-and-push-Image：" class="headerlink" title="4 maven build docker and push Image："></a>4 maven build docker and push Image：</h1><p>mvn clean package docker:build -DpushImage</p>
<p>（需要注意：运行环境必须有docker）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;链接：&lt;a href=&quot;/2018/05/08/（六）docker安装本地仓库（root用户）/&quot;&gt;docker安装本地仓库&lt;/a&gt;&lt;br&gt;使用maven 打包jar成docker镜像 并发布到镜像库&lt;/p&gt;
&lt;h1 id=&quot;1-maven-settings-xml配置se
    
    </summary>
    
      <category term="docker" scheme="https://smallwenzi.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
      <category term="maven" scheme="https://smallwenzi.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>docker -mysql</title>
    <link href="https://smallwenzi.github.io/2018/05/08/ocker-mysql/"/>
    <id>https://smallwenzi.github.io/2018/05/08/ocker-mysql/</id>
    <published>2018-05-08T09:28:00.000Z</published>
    <updated>2018-05-08T09:34:24.586Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<br><a href="/2018/05/08/（四）安装docker（root用户）/">安装docker</a></p>
<h1 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure>
<h1 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql -p 3306:3306 -v /app/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql</span><br></pre></td></tr></table></figure>
<h1 id="进入mysql进行设置"><a href="#进入mysql进行设置" class="headerlink" title="进入mysql进行设置"></a>进入mysql进行设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a  --获取mysql 容器的id</span><br><span class="line"></span><br><span class="line">docker exec -it 容器id sh</span><br></pre></td></tr></table></figure>
<h1 id="进入Mysql后登录mysql"><a href="#进入Mysql后登录mysql" class="headerlink" title="进入Mysql后登录mysql"></a>进入Mysql后登录mysql</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line">若报root@localhost,请试试mysql -uroot</span><br></pre></td></tr></table></figure>
<h1 id="创建数据库用户"><a href="#创建数据库用户" class="headerlink" title="创建数据库用户"></a>创建数据库用户</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create USER springcloud IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to springcloud;</span><br><span class="line"></span><br><span class="line">create database springclouddb</span><br></pre></td></tr></table></figure>
<h1 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h1><p>若show databases 报错<br>若是 缺没有此mysql.infoschema用户<br>则执行以下sql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create USER &apos;mysql.infoschema&apos; IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">create USER &apos;mysql.session&apos; IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">create USER &apos;mysql.sys&apos;  IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">create USER springcloud IDENTIFIED WITH mysql_native_password BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to &apos;mysql.infoschema&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to &apos;mysql.session&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to &apos;mysql.sys&apos;;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;/2018/05/08/（四）安装docker（root用户）/&quot;&gt;安装docker&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;下载镜像&quot;&gt;&lt;a href=&quot;#下载镜像&quot; class=&quot;headerlink&quot; title=&quot;下载镜像&quot;&gt;&lt;/a&gt;下载镜像
    
    </summary>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
      <category term="mysql" scheme="https://smallwenzi.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>（六）docker安装本地仓库（root用户）</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%EF%BC%88%E5%85%AD%EF%BC%89docker%E5%AE%89%E8%A3%85%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%EF%BC%88root%E7%94%A8%E6%88%B7%EF%BC%89/"/>
    <id>https://smallwenzi.github.io/2018/05/08/（六）docker安装本地仓库（root用户）/</id>
    <published>2018-05-08T09:09:00.000Z</published>
    <updated>2019-05-06T07:50:59.709Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<br><a href="/2018/05/08/（四）安装docker（root用户）/">安装docker</a></p>
<p>创建使用仓库，并设置https 及安全访问</p>
<h1 id="1下载镜像"><a href="#1下载镜像" class="headerlink" title="1下载镜像"></a>1下载镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker pull registry</span><br></pre></td></tr></table></figure>
<h1 id="2-创建目录"><a href="#2-创建目录" class="headerlink" title="2 创建目录"></a>2 创建目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mkdir -p ~/certs</span><br></pre></td></tr></table></figure>
<h1 id="3-进入目录"><a href="#3-进入目录" class="headerlink" title="3 进入目录"></a>3 进入目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; cd ~/certs</span><br></pre></td></tr></table></figure>
<h1 id="4-创建域名证书"><a href="#4-创建域名证书" class="headerlink" title="4 创建域名证书"></a>4 创建域名证书</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; openssl genrsa -out rep.itmuch.com.key 2048</span><br></pre></td></tr></table></figure>
<h1 id="5-创建证书"><a href="#5-创建证书" class="headerlink" title="5 创建证书"></a>5 创建证书</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; openssl req -newkey rsa:4096 -nodes -sha256 -keyout \ rep.itmuch.com.key -x509 -days 365 -out \ rep.itmuch.com.crt  </span><br><span class="line"></span><br><span class="line">Country Name (2 letter code) [XX]:       # 你的国家名称</span><br><span class="line"></span><br><span class="line">CN State or Province Name (full name) []:GD    # 省份</span><br><span class="line"></span><br><span class="line">Locality Name (eg, city) [Default City]:GZ      # 所在城市</span><br><span class="line"></span><br><span class="line">Organization Name (eg, company) [DefaultCompany Ltd]:test     # 组织名称</span><br><span class="line"></span><br><span class="line">Organizational Unit Name (eg, section)[]:test      # 组织单元名称</span><br><span class="line"></span><br><span class="line">Common Name (eg, your name or your server&apos;shostname) []:rep.itmuch.com    # 域名</span><br><span class="line"></span><br><span class="line">Email Address []:     # 邮箱</span><br></pre></td></tr></table></figure>
<h1 id="3-复制证书至docker"><a href="#3-复制证书至docker" class="headerlink" title="3 复制证书至docker"></a>3 复制证书至docker</h1><h2 id="3-1创建目录"><a href="#3-1创建目录" class="headerlink" title="3.1创建目录"></a>3.1创建目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mkdir -p /etc/docker/certs.d/rep.itmuch.com</span><br></pre></td></tr></table></figure>
<h2 id="3-2-复制证书至docker目录"><a href="#3-2-复制证书至docker目录" class="headerlink" title="3.2 复制证书至docker目录"></a>3.2 复制证书至docker目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; cp ~/certs/rep.itmuch.com.crt /etc/docker/certs.d/rep.itmuch.com/</span><br></pre></td></tr></table></figure>
<h2 id="3-3-重启docker"><a href="#3-3-重启docker" class="headerlink" title="3.3 重启docker"></a>3.3 重启docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; systemctl restart docker</span><br></pre></td></tr></table></figure>
<h1 id="4-设置用户名和密码"><a href="#4-设置用户名和密码" class="headerlink" title="4 设置用户名和密码"></a>4 设置用户名和密码</h1><h2 id="4-1-安装-httpd-tools"><a href="#4-1-安装-httpd-tools" class="headerlink" title="4.1 安装 httpd-tools"></a>4.1 安装 httpd-tools</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; yum install httpd-tools</span><br></pre></td></tr></table></figure>
<h2 id="4-2-当前登录用户"><a href="#4-2-当前登录用户" class="headerlink" title="4.2 当前登录用户"></a>4.2 当前登录用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; cd~</span><br></pre></td></tr></table></figure>
<h2 id="4-3-创建目录"><a href="#4-3-创建目录" class="headerlink" title="4.3 创建目录"></a>4.3 创建目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;mkdir auth</span><br></pre></td></tr></table></figure>
<h2 id="4-4创建用户名和密码"><a href="#4-4创建用户名和密码" class="headerlink" title="4.4创建用户名和密码"></a>4.4创建用户名和密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -Bbn testuser testpassword &gt; auth/htpasswd</span><br></pre></td></tr></table></figure>
<h2 id="5-运行"><a href="#5-运行" class="headerlink" title="5 运行"></a>5 运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 443:5000   \-v /root/certs:/certs \ -v/root/auth:/auth \-v /opt/docker-image:/var/lib/registry \-e STORAGE_PATH=/opt/docker-image \-e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/rep.itmuch.com.crt\-e REGISTRY_HTTP_TLS_KEY=/certs/rep.itmuch.com.key\ -e&quot;REGISTRY_AUTH=htpasswd&quot; \  -e&quot;REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm&quot; \  -eREGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \registry</span><br></pre></td></tr></table></figure>
<h1 id="host主机名"><a href="#host主机名" class="headerlink" title="host主机名"></a>host主机名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;192.168.137.8 rep.itmuch.com&apos;&gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>
<h1 id="登录私有库"><a href="#登录私有库" class="headerlink" title="登录私有库"></a>登录私有库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login rep.itmuch.com</span><br></pre></td></tr></table></figure>
<p>push或pull需要登录否则不能报错</p>
<h1 id="push到私有库"><a href="#push到私有库" class="headerlink" title="push到私有库"></a>push到私有库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker tag alpine rep.itmuch.com/alpine</span><br><span class="line"></span><br><span class="line">docker push rep.itmuch.com/alpine</span><br></pre></td></tr></table></figure>
<h1 id="查看镜像目录"><a href="#查看镜像目录" class="headerlink" title="查看镜像目录"></a>查看镜像目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rep.itmuch.com/v2/_catalog</span><br></pre></td></tr></table></figure>
<h1 id="查看镜像-版本列表"><a href="#查看镜像-版本列表" class="headerlink" title="查看镜像 版本列表"></a>查看镜像 版本列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rep.itmuch.com/v2/alpine/tags/list</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;/2018/05/08/（四）安装docker（root用户）/&quot;&gt;安装docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;创建使用仓库，并设置https 及安全访问&lt;/p&gt;
&lt;h1 id=&quot;1下载镜像&quot;&gt;&lt;a href=&quot;#1下载镜像&quot; class=&quot;he
    
    </summary>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>（五）更新docker 版本（root用户）</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%EF%BC%89%E6%9B%B4%E6%96%B0docker-%E7%89%88%E6%9C%AC%EF%BC%88root%E7%94%A8%E6%88%B7%EF%BC%89/"/>
    <id>https://smallwenzi.github.io/2018/05/08/）更新docker-版本（root用户）/</id>
    <published>2018-05-08T09:00:00.000Z</published>
    <updated>2019-05-06T06:03:39.216Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="/2018/05/08/（四）安装docker（root用户）/">安装docker 操作</a></p>
<h1 id="1-删除旧版本（以下操作都是使用root用户）"><a href="#1-删除旧版本（以下操作都是使用root用户）" class="headerlink" title="1 删除旧版本（以下操作都是使用root用户）"></a>1 删除旧版本（以下操作都是使用root用户）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line"></span><br><span class="line">docker-client \</span><br><span class="line"></span><br><span class="line">docker-client-latest\ </span><br><span class="line"></span><br><span class="line">docker-common \</span><br><span class="line"></span><br><span class="line">docker-latest \</span><br><span class="line"></span><br><span class="line">docker-latest-logrotate \</span><br><span class="line"></span><br><span class="line">docker-logrotate \</span><br><span class="line"></span><br><span class="line">docker-selinux \</span><br><span class="line"></span><br><span class="line">docker-engine-selinux \</span><br><span class="line"></span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure>
<h1 id="2-确保docker-ce-edge最新版本"><a href="#2-确保docker-ce-edge最新版本" class="headerlink" title="2 确保docker-ce-edge最新版本"></a>2 确保docker-ce-edge最新版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager--enable docker-ce-edge</span><br></pre></td></tr></table></figure>
<h1 id="3-安装docker"><a href="#3-安装docker" class="headerlink" title="3 安装docker"></a>3 安装docker</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce</span><br></pre></td></tr></table></figure>
<h1 id="4-设置集群功能"><a href="#4-设置集群功能" class="headerlink" title="4 设置集群功能"></a>4 设置集群功能</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/systemd/system/multi-user.target.wants/docker.service </span><br><span class="line">在</span><br><span class="line">ExecStart=/usr/bin/dockerd 添加 --experimental=true  表示启用集群功能</span><br></pre></td></tr></table></figure>
<h1 id="5-重新加载配置"><a href="#5-重新加载配置" class="headerlink" title="5 重新加载配置"></a>5 重新加载配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>
<h1 id="6-启动服务"><a href="#6-启动服务" class="headerlink" title="6 启动服务"></a>6 启动服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctemctl start docker</span><br></pre></td></tr></table></figure>
<h1 id="7-查看版本："><a href="#7-查看版本：" class="headerlink" title="7 查看版本："></a>7 查看版本：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;a href=&quot;/2018/05/08/（四）安装docker（root用户）/&quot;&gt;安装docker 操作&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-删除旧版本（以下操作都是使用root用户）&quot;&gt;&lt;a href=&quot;#1-删除旧版本（以下操作都是使用root用户）&quot; cla
    
    </summary>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>（四）安装docker（root用户）</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%EF%BC%88%E5%9B%9B%EF%BC%89%E5%AE%89%E8%A3%85docker%EF%BC%88root%E7%94%A8%E6%88%B7%EF%BC%89/"/>
    <id>https://smallwenzi.github.io/2018/05/08/（四）安装docker（root用户）/</id>
    <published>2018-05-08T07:59:00.000Z</published>
    <updated>2019-05-06T06:03:17.972Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<br><a href="/2018/05/08/）oracle-VM安装red-hat-liunx/">oracle VM安装red hat liunx</a></p>
<p><a href="/2018/05/08/）Red-Hat-升级-rpm软件、YUM软件（root用户）/">升级RPM和YUM 包</a></p>
<h1 id="1-安装docker（以下操作都是使用root用户）"><a href="#1-安装docker（以下操作都是使用root用户）" class="headerlink" title="1 安装docker（以下操作都是使用root用户）"></a>1 安装docker（以下操作都是使用root用户）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">--安装驱动（red-hat为例,不同操作系统，驱动不同详细看官网教程）</span><br><span class="line">&gt; yum install -y yum-utils device-mapper-persistent-data lvm2  </span><br><span class="line"></span><br><span class="line">--添加docker仓库</span><br><span class="line">&gt; yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">--清除缓存</span><br><span class="line">&gt; yum clean all</span><br><span class="line"></span><br><span class="line">--重新更新缓存</span><br><span class="line">&gt; yum makecache</span><br><span class="line"></span><br><span class="line">--确保docker engine最新</span><br><span class="line">&gt; yum-config-manager --enable docker-ce-edge</span><br><span class="line"></span><br><span class="line">--安装docker</span><br><span class="line">&gt; yum install docker-ce</span><br><span class="line"></span><br><span class="line">开机启动</span><br><span class="line">&gt; systemctl enable docker</span><br><span class="line"></span><br><span class="line">开启集群权限</span><br><span class="line">&gt;vi /etc/systemd/system/multi-user.target.wants/docker.service </span><br><span class="line">在</span><br><span class="line">ExecStart=/usr/bin/dockerd </span><br><span class="line">添加</span><br><span class="line">--experimental=true </span><br><span class="line"></span><br><span class="line">重新加载配置</span><br><span class="line">&gt;systemctl daemon-reload </span><br><span class="line"></span><br><span class="line"> --启动docker</span><br><span class="line">&gt;systemctl start docker</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">docker官网</a></p>
<p>docker 常用命令 参考<a href="https://docs.docker.com/engine/reference/run/" target="_blank" rel="noopener">docker 命令官网</a></p>
<h1 id="2-查看docker-版本"><a href="#2-查看docker-版本" class="headerlink" title="2 查看docker 版本"></a>2 查看docker 版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version --目前最新版本是 17.12.1-ce</span><br></pre></td></tr></table></figure>
<h1 id="3-查看docker-信息"><a href="#3-查看docker-信息" class="headerlink" title="3 查看docker 信息"></a>3 查看docker 信息</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure>
<h1 id="4-运行镜像"><a href="#4-运行镜像" class="headerlink" title="4 运行镜像"></a>4 运行镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-word --本地没有会找镜像库</span><br></pre></td></tr></table></figure>
<p>关于run 一些参数详细参考<a href="https://docs.docker.com/engine/reference/run/" target="_blank" rel="noopener">docker官网</a></p>
<h1 id="5-下载镜像"><a href="#5-下载镜像" class="headerlink" title="5 下载镜像"></a>5 下载镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull alpine</span><br></pre></td></tr></table></figure>
<h1 id="6-制作java环境镜像："><a href="#6-制作java环境镜像：" class="headerlink" title="6 制作java环境镜像："></a>6 制作java环境镜像：</h1><p>使用DockerFile 进行编写 ,参考<a href="https://docs.docker.com/engine/reference/builder/#usage" target="_blank" rel="noopener">dockerFile官网</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FROM alpine</span><br><span class="line">MAINTAINER killko &lt;killko@qq.com&gt;</span><br><span class="line">ENV TIME_ZONE Asiz/Shanghai</span><br><span class="line">RUN echo &apos;@edge http://nl.alpinelinux.org/alpine/edge/main&apos; &gt;&gt; /etc/apk/repositories &amp;&amp; \</span><br><span class="line">    echo &apos;@community http://nl.alpinelinux.org/alpine/edge/community&apos; &gt;&gt; /etc/apk/repositories &amp;&amp; \</span><br><span class="line">    apk update &amp;&amp; \</span><br><span class="line">    apk upgrade &amp;&amp; \</span><br><span class="line">    apk add ca-certificates openjdk8-jre-base@community &amp;&amp; \</span><br><span class="line">    apk del ca-certificates &amp;&amp; \</span><br><span class="line">    apk add --no-cache tzdata &amp;&amp; \</span><br><span class="line">    echo &quot;$&#123;TIME_ZONE&#125;&quot; &gt; /etc/timezone &amp;&amp; \</span><br><span class="line">    ln -sf /usr/share/zoneinfo/$&#123;TIME_ZONE&#125; /etc/localtime &amp;&amp; \</span><br><span class="line">    rm -rf /tmp/* /var/cache/apk/*</span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br></pre></td></tr></table></figure>
<p>编写完成进行build<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;docker build  -t openjre:latest . --表示在当前目录进行制作镜像</span><br><span class="line">&gt;docker images --查看镜像</span><br><span class="line">&gt;docker run -it openjre sh --进行查看java是否安装成功</span><br></pre></td></tr></table></figure></p>
<h1 id="7-导入镜像"><a href="#7-导入镜像" class="headerlink" title="7 导入镜像"></a>7 导入镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load &lt; openjre.tar</span><br></pre></td></tr></table></figure>
<h1 id="8-导出镜像："><a href="#8-导出镜像：" class="headerlink" title="8 导出镜像："></a>8 导出镜像：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save openjre:latest  openjre.tar</span><br></pre></td></tr></table></figure>
<h1 id="9-查看镜像"><a href="#9-查看镜像" class="headerlink" title="9 查看镜像"></a>9 查看镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
<h1 id="10-查看正在运行容器"><a href="#10-查看正在运行容器" class="headerlink" title="10 查看正在运行容器"></a>10 查看正在运行容器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a --查看容器id 运行状态 映射端口</span><br></pre></td></tr></table></figure>
<h1 id="11-查看容器日志"><a href="#11-查看容器日志" class="headerlink" title="11 查看容器日志"></a>11 查看容器日志</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f 容器id --容器id从docker ps -a获取</span><br></pre></td></tr></table></figure>
<h1 id="12-停止容器"><a href="#12-停止容器" class="headerlink" title="12 停止容器"></a>12 停止容器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器id ----容器id从docker ps -a获取</span><br></pre></td></tr></table></figure>
<h1 id="13-删除容器"><a href="#13-删除容器" class="headerlink" title="13 删除容器"></a>13 删除容器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id --容器id从docker ps -a获取</span><br></pre></td></tr></table></figure>
<h1 id="14-删除镜像"><a href="#14-删除镜像" class="headerlink" title="14 删除镜像"></a>14 删除镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi imagename:tag --imagename:tag imagename表示镜像名称 tag表示版本 这些信息可以从docker images进行获取</span><br></pre></td></tr></table></figure>
<h1 id="15-进入容器-运行sh命令："><a href="#15-进入容器-运行sh命令：" class="headerlink" title="15 进入容器 运行sh命令："></a>15 进入容器 运行sh命令：</h1><p>docker exec -it 容器id sh –容器id从docker ps -a获取</p>
<h1 id="16-添加普通用户操作docker"><a href="#16-添加普通用户操作docker" class="headerlink" title="16 添加普通用户操作docker"></a>16 添加普通用户操作docker</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi etc/systemd/system/multi-user.target.wants/docker.service （操作服务）</span><br><span class="line"></span><br><span class="line">ExecStart=/usr/bin/dockerd -G jenkins  #表示jenkins用户组可以操作docker命令</span><br><span class="line"></span><br><span class="line">保存后</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload --重新加载服务</span><br><span class="line"></span><br><span class="line">systemctl restart docker --重启服务</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;链接：&lt;br&gt;&lt;a href=&quot;/2018/05/08/）oracle-VM安装red-hat-liunx/&quot;&gt;oracle VM安装red hat liunx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2018/05/08/）Red-Hat-升级-rpm软件、YUM软件（
    
    </summary>
    
    
      <category term="docker" scheme="https://smallwenzi.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>（三）linux 安装 GIT（root用户）</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%E4%B8%89%EF%BC%89linux-%E5%AE%89%E8%A3%85-GIT%EF%BC%88root%E7%94%A8%E6%88%B7%EF%BC%89/"/>
    <id>https://smallwenzi.github.io/2018/05/08/三）linux-安装-GIT（root用户）/</id>
    <published>2018-05-08T07:52:00.000Z</published>
    <updated>2018-06-08T13:30:48.968Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<br><a href="/2018/05/08/）oracle-VM安装red-hat-liunx/">oracle VM安装red hat liunx</a></p>
<p> <a href="/2018/05/08/）Red-Hat-升级-rpm软件、YUM软件（root用户）/">升级RPM和YUM 包</a></p>
<h1 id="安装GIT（root用户）"><a href="#安装GIT（root用户）" class="headerlink" title="安装GIT（root用户）"></a>安装GIT（root用户）</h1><p>yum install git</p>
<h1 id="1-创建用户"><a href="#1-创建用户" class="headerlink" title="1 创建用户"></a>1 创建用户</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;useradd test</span><br></pre></td></tr></table></figure>
<h1 id="2-设置密码"><a href="#2-设置密码" class="headerlink" title="2 设置密码"></a>2 设置密码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;passwd test</span><br></pre></td></tr></table></figure>
<h1 id="3-创建目录"><a href="#3-创建目录" class="headerlink" title="3 创建目录"></a>3 创建目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;mkdir -p /repo</span><br></pre></td></tr></table></figure>
<h1 id="4-初始化git-库"><a href="#4-初始化git-库" class="headerlink" title="4 初始化git 库"></a>4 初始化git 库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;git init --shared /repo/code</span><br></pre></td></tr></table></figure>
<h1 id="5-进入目录："><a href="#5-进入目录：" class="headerlink" title="5 进入目录："></a>5 进入目录：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;cd /repo/code</span><br></pre></td></tr></table></figure>
<h1 id="6-git-忽略设置"><a href="#6-git-忽略设置" class="headerlink" title="6 git 忽略设置"></a>6 git 忽略设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;git config receive.denyCurrentBranch&quot;ignore&quot;</span><br></pre></td></tr></table></figure>
<h1 id="7-设置-邮件"><a href="#7-设置-邮件" class="headerlink" title="7 设置 邮件"></a>7 设置 邮件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;git config --global user.email  123@126.com</span><br></pre></td></tr></table></figure>
<h1 id="8-设置-用户名"><a href="#8-设置-用户名" class="headerlink" title="8 设置 用户名"></a>8 设置 用户名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;git config --global user.name &quot;test&quot;</span><br></pre></td></tr></table></figure>
<h1 id="9-添加README-md"><a href="#9-添加README-md" class="headerlink" title="9 添加README.md"></a>9 添加README.md</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;touch ./Readme.md</span><br></pre></td></tr></table></figure>
<h1 id="10-git-add文件"><a href="#10-git-add文件" class="headerlink" title="10 git add文件"></a>10 git add文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;git add ./Readme.md</span><br></pre></td></tr></table></figure>
<h1 id="11-提交代码"><a href="#11-提交代码" class="headerlink" title="11 提交代码"></a>11 提交代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;git commit -m &quot;init&quot;./Readme.md</span><br></pre></td></tr></table></figure>
<h1 id="12-设置权限"><a href="#12-设置权限" class="headerlink" title="12 设置权限"></a>12 设置权限</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; chmod -R og+w /repoE</span><br></pre></td></tr></table></figure>
<h1 id="13-下载代码"><a href="#13-下载代码" class="headerlink" title="13 下载代码"></a>13 下载代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh://test@192.168.137.8/repo/code</span><br></pre></td></tr></table></figure>
<h1 id="14-添加文件"><a href="#14-添加文件" class="headerlink" title="14 添加文件"></a>14 添加文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add</span><br></pre></td></tr></table></figure>
<h1 id="15-提交文件"><a href="#15-提交文件" class="headerlink" title="15 提交文件"></a>15 提交文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></table></figure>
<h1 id="16-推送代码"><a href="#16-推送代码" class="headerlink" title="16 推送代码"></a>16 推送代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;链接：&lt;br&gt;&lt;a href=&quot;/2018/05/08/）oracle-VM安装red-hat-liunx/&quot;&gt;oracle VM安装red hat liunx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;/2018/05/08/）Red-Hat-升级-rpm软件、YUM软件
    
    </summary>
    
      <category term="git" scheme="https://smallwenzi.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>(二）Red-Hat-升级-rpm软件、YUM软件（root用户）</title>
    <link href="https://smallwenzi.github.io/2018/05/08/Red-Hat-%E5%8D%87%E7%BA%A7-rpm%E8%BD%AF%E4%BB%B6%E3%80%81YUM%E8%BD%AF%E4%BB%B6%EF%BC%88root%E7%94%A8%E6%88%B7%EF%BC%89/"/>
    <id>https://smallwenzi.github.io/2018/05/08/Red-Hat-升级-rpm软件、YUM软件（root用户）/</id>
    <published>2018-05-08T07:30:00.000Z</published>
    <updated>2018-06-08T15:26:14.768Z</updated>
    
    <content type="html"><![CDATA[<p>以下操作是root用户</p>
<p>1 <a href="/2018/05/08/）oracle-VM安装red-hat-liunx/">oracle VM安装red hat liunx</a></p>
<p>rpm 下载链接：<a href="http://mirrors.163.com/centos/7/os/x86_64/Packages/" target="_blank" rel="noopener">http://mirrors.163.com/centos/7/os/x86_64/Packages/</a></p>
<h1 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; rpm version</span><br></pre></td></tr></table></figure>
<p><img src="/2018/05/08/Red-Hat-升级-rpm软件、YUM软件（root用户）/11278290-76fc51b36f51535f.png" alt="logo"></p>
<h1 id="升级rpm"><a href="#升级rpm" class="headerlink" title="升级rpm"></a>升级rpm</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;rpm -Uvh rpm-4.11.3-25.el7.x86_64.rpm  rpm-build-libs-4.11.3-25.el7.x86_64.rpm rpm-libs-4.11.3-25.el7.x86_64.rpm rpm-python-4.11.3-25.el7.x86_64.rpm --force -i</span><br></pre></td></tr></table></figure>
<p><img src="/2018/05/08/Red-Hat-升级-rpm软件、YUM软件（root用户）/11278290-2b0c840c69622e92.png" alt="logo"></p>
<h1 id="删除旧的yum"><a href="#删除旧的yum" class="headerlink" title="删除旧的yum"></a>删除旧的yum</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; rpm -e yum-metadata-parser-1.1.4-10.el7.x86_64 yum-3.4.3-125.el7.noarch yum-rhn-plugin-2.0.1-5.el7.noarch --nodeps</span><br></pre></td></tr></table></figure>
<h1 id="安装yum"><a href="#安装yum" class="headerlink" title="安装yum"></a>安装yum</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; rpm -Uvh yum-3.4.3-154.el7.centos.noarch.rpm yum-metadata-parser-1.1.4-10.el7.x86_64.rpm python-urlgrabber-3.10-8.el7.noarch.rpm yum-plugin-fastestmirror-1.1.31-42.el7.noarch.rpm yum-utils-1.1.31-42.el7.noarch.rpm  python-kitchen-1.1.1-5.el7.noarch.rpm python-chardet-2.2.1-1.el7_1.noarch.rpm</span><br></pre></td></tr></table></figure>
<h1 id="编辑-CentOS6-Base-repo"><a href="#编辑-CentOS6-Base-repo" class="headerlink" title="编辑 CentOS6-Base.repo"></a>编辑 CentOS6-Base.repo</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi CentOS6-Base.repo 文件</span><br></pre></td></tr></table></figure>
<h1 id="CentOS-Base-repo"><a href="#CentOS-Base-repo" class="headerlink" title="CentOS-Base.repo"></a>CentOS-Base.repo</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># CentOS-Base.repo</span><br><span class="line">#</span><br><span class="line"># The mirror system uses the connecting IP address of the client and the</span><br><span class="line"># update status of each mirror to pick mirrors that are updated to and</span><br><span class="line"># geographically close to the client.  You should use this for CentOS updates</span><br><span class="line"># unless you are manually picking other mirrors.</span><br><span class="line">#</span><br><span class="line"># If the mirrorlist= does not work for you, as a fall back you can try the </span><br><span class="line"># remarked out baseurl= line instead.</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"> </span><br><span class="line">[base]</span><br><span class="line">name=CentOS-7 - Base - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/7/os/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/7/os/$basearch/</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=7&amp;arch=$basearch&amp;repo=os</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#released updates </span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-7 - Updates - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/7/updates/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/7/updates/$basearch/</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=7&amp;arch=$basearch&amp;repo=updates</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-7 - Extras - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/7/extras/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/7/extras/$basearch/</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=7&amp;arch=$basearch&amp;repo=extras</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#additional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-7 - Plus - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/7/centosplus/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/7/centosplus/$basearch/</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=7&amp;arch=$basearch&amp;repo=centosplus</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#contrib - packages by Centos Users</span><br><span class="line">[contrib]</span><br><span class="line">name=CentOS-7 - Contrib - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/7/contrib/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/7/contrib/$basearch/</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=7&amp;arch=$basearch&amp;repo=contrib</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>
<h1 id="复制资源库文件至yum目录"><a href="#复制资源库文件至yum目录" class="headerlink" title="复制资源库文件至yum目录"></a>复制资源库文件至yum目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; cp CentOS6-Base.repo /etc/yum.repos.d/</span><br></pre></td></tr></table></figure>
<h1 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;yum clean all</span><br></pre></td></tr></table></figure>
<h1 id="建立yum-缓存"><a href="#建立yum-缓存" class="headerlink" title="建立yum 缓存"></a>建立yum 缓存</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;yum makecache</span><br></pre></td></tr></table></figure>
<p><img src="/2018/05/08/Red-Hat-升级-rpm软件、YUM软件（root用户）/11278290-d31d27becb290491.png" alt="logo"></p>
<h1 id="再次更新yum"><a href="#再次更新yum" class="headerlink" title="再次更新yum"></a>再次更新yum</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update yum</span><br></pre></td></tr></table></figure>
<p>yum install yum-rhn*</p>
<p>yum update redhat*</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下操作是root用户&lt;/p&gt;
&lt;p&gt;1 &lt;a href=&quot;/2018/05/08/）oracle-VM安装red-hat-liunx/&quot;&gt;oracle VM安装red hat liunx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rpm 下载链接：&lt;a href=&quot;http://mirror
    
    </summary>
    
      <category term="linux" scheme="https://smallwenzi.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://smallwenzi.github.io/tags/linux/"/>
    
      <category term="rpm" scheme="https://smallwenzi.github.io/tags/rpm/"/>
    
      <category term="yum" scheme="https://smallwenzi.github.io/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>（一）oracle VM安装red hat liunx</title>
    <link href="https://smallwenzi.github.io/2018/05/08/%EF%BC%89oracle-VM%E5%AE%89%E8%A3%85red-hat-liunx/"/>
    <id>https://smallwenzi.github.io/2018/05/08/）oracle-VM安装red-hat-liunx/</id>
    <published>2018-05-08T07:01:00.000Z</published>
    <updated>2018-05-08T07:28:17.424Z</updated>
    
    <content type="html"><![CDATA[<p>软件：Oracle VM VirtualBox</p>
<p>网络桥接物流网卡：</p>
<h1 id="1打开Oracle-VMVirtualBox-点击新建按钮"><a href="#1打开Oracle-VMVirtualBox-点击新建按钮" class="headerlink" title="1打开Oracle VMVirtualBox 点击新建按钮"></a>1打开Oracle VMVirtualBox 点击新建按钮</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-8cae3ccf049eb036.png" alt="logo"></p>
<h1 id="2-点击-下一步-按钮"><a href="#2-点击-下一步-按钮" class="headerlink" title="2 点击 下一步 按钮"></a>2 点击 下一步 按钮</h1><p>名称 输入：jenkins</p>
<p>类型：Linux</p>
<p>操作系统：Red Rat(64 bit)<br><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-d23c40773d84371f.png" alt="logo"></p>
<h1 id="3-内存-默认1G，点击-下一步"><a href="#3-内存-默认1G，点击-下一步" class="headerlink" title="3 内存 默认1G，点击 下一步"></a>3 内存 默认1G，点击 下一步</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-22f082cba471a8bb.png" alt="logo"></p>
<h1 id="4-选择-现在创建虚拟硬盘-，点击-创建-按钮"><a href="#4-选择-现在创建虚拟硬盘-，点击-创建-按钮" class="headerlink" title="4 选择 现在创建虚拟硬盘 ，点击 创建 按钮"></a>4 选择 现在创建虚拟硬盘 ，点击 创建 按钮</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-6a1302edff3ebf2e.png" alt="logo"></p>
<h1 id="5-默认选项，点击-下一步"><a href="#5-默认选项，点击-下一步" class="headerlink" title="5 默认选项，点击 下一步"></a>5 默认选项，点击 下一步</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-8baeb9eb905c71a2.png" alt="logo"></p>
<h1 id="6-选择-动态分配-，点击-下一步-按钮"><a href="#6-选择-动态分配-，点击-下一步-按钮" class="headerlink" title="6 选择 动态分配 ，点击 下一步 按钮"></a>6 选择 动态分配 ，点击 下一步 按钮</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-7adf8cc44c0ee846.png" alt="logo"></p>
<h1 id="7-设置硬盘大小-40G-，后点击创建按钮"><a href="#7-设置硬盘大小-40G-，后点击创建按钮" class="headerlink" title="7  设置硬盘大小:40G ，后点击创建按钮"></a>7  设置硬盘大小:40G ，后点击创建按钮</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-4e335970ba06000f.png" alt="logo"></p>
<h1 id="8-点击设置按钮"><a href="#8-点击设置按钮" class="headerlink" title="8 点击设置按钮"></a>8 点击设置按钮</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-f9a8280cb4192f6b.png" alt="logo"></p>
<h1 id="9-选择-网卡-选项，选择-桥接网卡-方式，选择存储选项"><a href="#9-选择-网卡-选项，选择-桥接网卡-方式，选择存储选项" class="headerlink" title="9 选择 网卡 选项，选择 桥接网卡 方式，选择存储选项"></a>9 选择 网卡 选项，选择 桥接网卡 方式，选择存储选项</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-24e0f2beb6f3331e.png" alt="logo"></p>
<h1 id="10-进行选择ISO镜像，点击图中-红色部分"><a href="#10-进行选择ISO镜像，点击图中-红色部分" class="headerlink" title="10 进行选择ISO镜像，点击图中 红色部分"></a>10 进行选择ISO镜像，点击图中 红色部分</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-0322ebd8568ed1e0.png" alt="logo"></p>
<h1 id="11-点击选择-磁盘"><a href="#11-点击选择-磁盘" class="headerlink" title="11 点击选择 磁盘"></a>11 点击选择 磁盘</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-82234f6e704f75f6.png" alt="logo"></p>
<h1 id="12-在弹出窗口-选择-系统镜像，选择完成-，点击打开按钮镜像可以从https-www-linuxprobe-com-tools下载"><a href="#12-在弹出窗口-选择-系统镜像，选择完成-，点击打开按钮镜像可以从https-www-linuxprobe-com-tools下载" class="headerlink" title="12 在弹出窗口 选择 系统镜像，选择完成 ，点击打开按钮镜像可以从https://www.linuxprobe.com/tools下载"></a>12 在弹出窗口 选择 系统镜像，选择完成 ，点击打开按钮镜像可以从<a href="https://www.linuxprobe.com/tools下载" target="_blank" rel="noopener">https://www.linuxprobe.com/tools下载</a></h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-e8c8a52d140c5609.png" alt="logo"></p>
<h1 id="13-点击OK-按钮后"><a href="#13-点击OK-按钮后" class="headerlink" title="13 点击OK 按钮后"></a>13 点击OK 按钮后</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-e22e0734301c33b6.png" alt="logo"></p>
<h1 id="14-虚拟机设置完成，点击启动"><a href="#14-虚拟机设置完成，点击启动" class="headerlink" title="14 虚拟机设置完成，点击启动"></a>14 虚拟机设置完成，点击启动</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-23e3a150c783f9fb.png" alt="logo"></p>
<h1 id="15-点击-启动按钮-选择InstallRed-Hat-Enterprise-Linux-7-1–-gt-enter"><a href="#15-点击-启动按钮-选择InstallRed-Hat-Enterprise-Linux-7-1–-gt-enter" class="headerlink" title="15 点击 启动按钮,选择InstallRed Hat Enterprise Linux 7.1–&gt;enter"></a>15 点击 启动按钮,选择InstallRed Hat Enterprise Linux 7.1–&gt;enter</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-b20d2391b41df6dc.png" alt="logo"></p>
<h1 id="16-选择语言-界面-，点击continue"><a href="#16-选择语言-界面-，点击continue" class="headerlink" title="16 选择语言 界面 ，点击continue"></a>16 选择语言 界面 ，点击continue</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-fe5bdba62c19c919.png" alt="logo"></p>
<h1 id="17-点击network-amp-host-name"><a href="#17-点击network-amp-host-name" class="headerlink" title="17 点击network&amp; host name"></a>17 点击network&amp; host name</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-77b646357a8b5e8a.png" alt="logo"></p>
<h1 id="18-OFF-改为ON后，点击DONE"><a href="#18-OFF-改为ON后，点击DONE" class="headerlink" title="18 OFF 改为ON后，点击DONE"></a>18 OFF 改为ON后，点击DONE</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-5bc80879edb2e0d6.png" alt="logo"></p>
<p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-cd397c4737115c39.png" alt="logo"></p>
<h1 id="19-选择INSTALLATIONDESTINATION"><a href="#19-选择INSTALLATIONDESTINATION" class="headerlink" title="19 选择INSTALLATIONDESTINATION"></a>19 选择INSTALLATIONDESTINATION</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-dc140d95517fb4de.png" alt="logo"></p>
<h1 id="20-点击Done-默认设置"><a href="#20-点击Done-默认设置" class="headerlink" title="20 点击Done,默认设置"></a>20 点击Done,默认设置</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-44f8decd9c26bb76.png" alt="logo"></p>
<h1 id="21-点击DATE-amp-TIME"><a href="#21-点击DATE-amp-TIME" class="headerlink" title="21 点击DATE&amp;TIME"></a>21 点击DATE&amp;TIME</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-62b4d6ecfa01455b.png" alt="logo"></p>
<h1 id="22-Region-改为Asia-City-上海，networkTime-ON，后点击Done"><a href="#22-Region-改为Asia-City-上海，networkTime-ON，后点击Done" class="headerlink" title="22 Region 改为Asia ,City:上海，networkTime=ON，后点击Done"></a>22 Region 改为Asia ,City:上海，networkTime=ON，后点击Done</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-5b08e271ee6f5d60.png" alt="logo"><br><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-f36a34e0fbdd4dbf.png" alt="logo"></p>
<h1 id="23-点击BeginInstallation"><a href="#23-点击BeginInstallation" class="headerlink" title="23 点击BeginInstallation"></a>23 点击BeginInstallation</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-a75186d85c19ec0b.png" alt="logo"></p>
<h1 id="24-点击ROOT-PASSWORD-进行设置ROOT-密码"><a href="#24-点击ROOT-PASSWORD-进行设置ROOT-密码" class="headerlink" title="24 点击ROOT PASSWORD 进行设置ROOT 密码"></a>24 点击ROOT PASSWORD 进行设置ROOT 密码</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-26a6a241112a9517.png" alt="logo"></p>
<h1 id="25-输入ROOT-密码点击Done"><a href="#25-输入ROOT-密码点击Done" class="headerlink" title="25 输入ROOT 密码点击Done"></a>25 输入ROOT 密码点击Done</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-7a2a749fed3fa8f9.png" alt="logo"></p>
<h1 id="26-耐心等候安装完成-如下图，点击REBOOT"><a href="#26-耐心等候安装完成-如下图，点击REBOOT" class="headerlink" title="26 耐心等候安装完成 如下图，点击REBOOT"></a>26 耐心等候安装完成 如下图，点击REBOOT</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-1df5c789751f5083.png" alt="logo"></p>
<h1 id="27-重启完成，如下图，表示安装成功，使用ROOT用户进行登录"><a href="#27-重启完成，如下图，表示安装成功，使用ROOT用户进行登录" class="headerlink" title="27 重启完成，如下图，表示安装成功，使用ROOT用户进行登录"></a>27 重启完成，如下图，表示安装成功，使用ROOT用户进行登录</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-1edb28581c216a0d.png" alt="logo"></p>
<h1 id="28-输入ip-addr-查看当前虚拟机的ip"><a href="#28-输入ip-addr-查看当前虚拟机的ip" class="headerlink" title="28 输入ip addr 查看当前虚拟机的ip"></a>28 输入ip addr 查看当前虚拟机的ip</h1><p>正常：</p>
<p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-92aec236bf64d15a.png" alt="logo"></p>
<p>不正常：<br><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-105894cde675332f.png" alt="logo"></p>
<p>解决办法：</p>
<p> cd/etc/sysconfig/network-scripts/</p>
<p>打开网卡文件进行设置静态IP vi ifcfg-enp0s3</p>
<p>首先把BOOTPROTO=”dhcp”改成BOOTPROTO=”static”表示静态获取，</p>
<p>然后在最后追加比如下面的配置：</p>
<p>IPADDR=192.168.1.33</p>
<p>NETMASK=255.255.255.0</p>
<p>GATEWAY=192.168.1.1</p>
<p>DNS1=202.96.134.33</p>
<p>保存后，</p>
<p>运行systemctl restart network</p>
<p>再次查看ip addr<br><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-cc3760aa781c68ef.png" alt="logo"></p>
<h1 id="29-使用SecureCRT-进行连接虚拟机"><a href="#29-使用SecureCRT-进行连接虚拟机" class="headerlink" title="29 使用SecureCRT 进行连接虚拟机"></a>29 使用SecureCRT 进行连接虚拟机</h1><p><img src="/2018/05/08/）oracle-VM安装red-hat-liunx/11278290-01decabbbeebf0d4.png" alt="logo"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;软件：Oracle VM VirtualBox&lt;/p&gt;
&lt;p&gt;网络桥接物流网卡：&lt;/p&gt;
&lt;h1 id=&quot;1打开Oracle-VMVirtualBox-点击新建按钮&quot;&gt;&lt;a href=&quot;#1打开Oracle-VMVirtualBox-点击新建按钮&quot; class=&quot;heade
    
    </summary>
    
    
      <category term="red hat Linux" scheme="https://smallwenzi.github.io/tags/red-hat-Linux/"/>
    
  </entry>
  
  <entry>
    <title>thymeleaf学习的坑</title>
    <link href="https://smallwenzi.github.io/2018/05/08/hymeleaf%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%9D%91/"/>
    <id>https://smallwenzi.github.io/2018/05/08/hymeleaf学习的坑/</id>
    <published>2018-05-08T06:30:00.000Z</published>
    <updated>2018-05-08T06:39:45.556Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引入css和js文件"><a href="#引入css和js文件" class="headerlink" title="引入css和js文件"></a>引入css和js文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link th:href=&quot;@&#123;/resources/admin/css/common.css&#125;&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</span><br><span class="line">&lt;script  type=&quot;text/javascript&quot; th:src=&quot;@&#123;/resources/admin/js/jquery.js&#125;&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h1 id="网页标题-多语言"><a href="#网页标题-多语言" class="headerlink" title="网页标题(多语言)"></a>网页标题(多语言)</h1><p>使用#{key}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  &lt;title th:text=&quot;#&#123;system.name&#125;&quot;&gt;&lt;/title&gt;</span><br><span class="line"># thymeleaf结合js</span><br><span class="line">&lt;script  th:inline=&quot;javascript&quot;&gt;</span><br><span class="line">       //controller 使用Model设置属性</span><br><span class="line">         var error=[[$&#123;error&#125;]];</span><br><span class="line">       //多语言</span><br><span class="line">       var usernameRequired=[[#&#123;admin.login.usernameRequired&#125;]]</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="thymeleaf结合js-冲突"><a href="#thymeleaf结合js-冲突" class="headerlink" title="thymeleaf结合js 冲突"></a>thymeleaf结合js 冲突</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//使用&lt;![CDATA[ ]]&gt;</span><br><span class="line">&lt;script th:inline=&quot;javascript&quot;&gt;</span><br><span class="line">//&lt;![CDATA[</span><br><span class="line">  js code</span><br><span class="line">	// ]]&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h1 id="th-include"><a href="#th-include" class="headerlink" title="th:include"></a>th:include</h1><p>compontent/commonJs.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div th:fragment=&quot;commonJs&quot;&gt;</span><br><span class="line">&lt;script th:inline=&quot;javascript&quot;&gt;</span><br><span class="line">js代码（国际化语言）</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>引用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div th:include=&quot;compontent/commonJs::commonJs&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="th-href"><a href="#th-href" class="headerlink" title="th:href"></a>th:href</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a th:href=&quot;@&#123;/admin/publicInfo/info(id=$&#123;publicInfo.id&#125;)&#125;&quot; target=&quot;iframe&quot; th:text=&quot;#&#123;admin.menu.publicManage.name&#125;&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<h1 id="th-each"><a href="#th-each" class="headerlink" title="th:each"></a>th:each</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr th:each=&quot;admin:$&#123;page.content&#125;&quot;&gt;</span><br><span class="line">			  &lt;td th:text=&quot;$&#123;admin.username&#125;&quot;&gt;&lt;/td&gt;</span><br><span class="line">	      &lt;/tr&gt;</span><br></pre></td></tr></table></figure>
<h1 id="格式化日期"><a href="#格式化日期" class="headerlink" title="格式化日期"></a>格式化日期</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;td th:text=&quot;$&#123;#calendars.format(admin.createDate,&apos;yyyy年MM月dd日&apos;)&#125;&quot;&gt;&lt;/td&gt;</span><br></pre></td></tr></table></figure>
<h1 id="th-if"><a href="#th-if" class="headerlink" title="th:if"></a>th:if</h1><p>•    单个条件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;td th:if=&quot;$&#123;admin.username&#125;==&apos;admin&apos;&quot;&gt;&lt;input type=&quot;checkbox&quot; name=&quot;ids&quot; th:value=&quot;$&#123;admin.id&#125;&quot; disabled=&quot;disabled&quot;/&gt;&lt;/td&gt;</span><br></pre></td></tr></table></figure></p>
<p>•    并且条件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;td th:if=&quot;$&#123;session.username&#125;!=&apos;admin&apos; and $&#123;admin.username&#125;==$&#123;session.username&#125;&quot;&gt;</span><br><span class="line">&lt;a th:href=&quot;@&#123;initEdit(id=$&#123;admin.id&#125;)&#125;&quot; th:text=&quot;#&#123;admin.menu.admin.edit&#125;&quot;&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;/td&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引入css和js文件&quot;&gt;&lt;a href=&quot;#引入css和js文件&quot; class=&quot;headerlink&quot; title=&quot;引入css和js文件&quot;&gt;&lt;/a&gt;引入css和js文件&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
    
    </summary>
    
    
      <category term="thymeleaf" scheme="https://smallwenzi.github.io/tags/thymeleaf/"/>
    
  </entry>
  
</feed>
